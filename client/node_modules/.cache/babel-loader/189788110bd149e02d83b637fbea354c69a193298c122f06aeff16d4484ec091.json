{"ast":null,"code":"var _jsxFileName = \"/Users/davidmcguire/Desktop/Master/Cursor/AudioZoom/client/src/components/CircleProgressBar.js\";\nimport React from 'react';\nimport './CircleProgressBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CircleProgressBar = ({\n  progress\n}) => {\n  // Calculate the circumference of the circle\n  const radius = 40;\n  const circumference = 2 * Math.PI * radius;\n\n  // Calculate the stroke-dashoffset based on progress\n  const strokeDashoffset = circumference - progress / 100 * circumference;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"progress-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"progress-ring\",\n      width: \"100\",\n      height: \"100\",\n      children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n        className: \"progress-ring-circle-bg\",\n        stroke: \"#e6e6e6\",\n        strokeWidth: \"8\",\n        fill: \"transparent\",\n        r: radius,\n        cx: \"50\",\n        cy: \"50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n        className: \"progress-ring-circle\",\n        stroke: \"#007bff\",\n        strokeWidth: \"8\",\n        strokeDasharray: `${circumference} ${circumference}`,\n        strokeDashoffset: strokeDashoffset,\n        strokeLinecap: \"round\",\n        fill: \"transparent\",\n        r: radius,\n        cx: \"50\",\n        cy: \"50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-text\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"progress-percentage\",\n        children: [Math.round(progress), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"progress-label\",\n        children: \"Uploading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = CircleProgressBar;\nexport default CircleProgressBar;\nvar _c;\n$RefreshReg$(_c, \"CircleProgressBar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","CircleProgressBar","progress","radius","circumference","Math","PI","strokeDashoffset","className","children","width","height","stroke","strokeWidth","fill","r","cx","cy","fileName","_jsxFileName","lineNumber","columnNumber","strokeDasharray","strokeLinecap","round","_c","$RefreshReg$"],"sources":["/Users/davidmcguire/Desktop/Master/Cursor/AudioZoom/client/src/components/CircleProgressBar.js"],"sourcesContent":["import React from 'react';\nimport './CircleProgressBar.css';\n\nconst CircleProgressBar = ({ progress }) => {\n  // Calculate the circumference of the circle\n  const radius = 40;\n  const circumference = 2 * Math.PI * radius;\n  \n  // Calculate the stroke-dashoffset based on progress\n  const strokeDashoffset = circumference - (progress / 100) * circumference;\n  \n  return (\n    <div className=\"progress-container\">\n      <svg className=\"progress-ring\" width=\"100\" height=\"100\">\n        <circle\n          className=\"progress-ring-circle-bg\"\n          stroke=\"#e6e6e6\"\n          strokeWidth=\"8\"\n          fill=\"transparent\"\n          r={radius}\n          cx=\"50\"\n          cy=\"50\"\n        />\n        <circle\n          className=\"progress-ring-circle\"\n          stroke=\"#007bff\"\n          strokeWidth=\"8\"\n          strokeDasharray={`${circumference} ${circumference}`}\n          strokeDashoffset={strokeDashoffset}\n          strokeLinecap=\"round\"\n          fill=\"transparent\"\n          r={radius}\n          cx=\"50\"\n          cy=\"50\"\n        />\n      </svg>\n      <div className=\"progress-text\">\n        <span className=\"progress-percentage\">{Math.round(progress)}%</span>\n        <span className=\"progress-label\">Uploading</span>\n      </div>\n    </div>\n  );\n};\n\nexport default CircleProgressBar; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAC1C;EACA,MAAMC,MAAM,GAAG,EAAE;EACjB,MAAMC,aAAa,GAAG,CAAC,GAAGC,IAAI,CAACC,EAAE,GAAGH,MAAM;;EAE1C;EACA,MAAMI,gBAAgB,GAAGH,aAAa,GAAIF,QAAQ,GAAG,GAAG,GAAIE,aAAa;EAEzE,oBACEJ,OAAA;IAAKQ,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCT,OAAA;MAAKQ,SAAS,EAAC,eAAe;MAACE,KAAK,EAAC,KAAK;MAACC,MAAM,EAAC,KAAK;MAAAF,QAAA,gBACrDT,OAAA;QACEQ,SAAS,EAAC,yBAAyB;QACnCI,MAAM,EAAC,SAAS;QAChBC,WAAW,EAAC,GAAG;QACfC,IAAI,EAAC,aAAa;QAClBC,CAAC,EAAEZ,MAAO;QACVa,EAAE,EAAC,IAAI;QACPC,EAAE,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eACFrB,OAAA;QACEQ,SAAS,EAAC,sBAAsB;QAChCI,MAAM,EAAC,SAAS;QAChBC,WAAW,EAAC,GAAG;QACfS,eAAe,EAAE,GAAGlB,aAAa,IAAIA,aAAa,EAAG;QACrDG,gBAAgB,EAAEA,gBAAiB;QACnCgB,aAAa,EAAC,OAAO;QACrBT,IAAI,EAAC,aAAa;QAClBC,CAAC,EAAEZ,MAAO;QACVa,EAAE,EAAC,IAAI;QACPC,EAAE,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNrB,OAAA;MAAKQ,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BT,OAAA;QAAMQ,SAAS,EAAC,qBAAqB;QAAAC,QAAA,GAAEJ,IAAI,CAACmB,KAAK,CAACtB,QAAQ,CAAC,EAAC,GAAC;MAAA;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACpErB,OAAA;QAAMQ,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAC;MAAS;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACI,EAAA,GAvCIxB,iBAAiB;AAyCvB,eAAeA,iBAAiB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}