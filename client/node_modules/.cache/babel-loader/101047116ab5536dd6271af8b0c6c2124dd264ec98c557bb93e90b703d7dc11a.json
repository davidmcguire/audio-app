{"ast":null,"code":"var _jsxFileName = \"/Users/davidmcguire/Desktop/Master/Cursor/AudioZoom/client/src/pages/AudioHistory.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './AudioHistory.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioHistory = () => {\n  _s();\n  const [recordings, setRecordings] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [playingId, setPlayingId] = useState(null);\n  const [audioProgress, setAudioProgress] = useState({});\n  const [audioDurations, setAudioDurations] = useState({});\n  const audioRefs = useRef({});\n  const progressIntervals = useRef({});\n  const navigate = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login');\n      return;\n    }\n    fetchRecordings();\n  }, [navigate]);\n\n  // Cleanup intervals on unmount\n  useEffect(() => {\n    return () => {\n      Object.values(progressIntervals.current).forEach(interval => {\n        clearInterval(interval);\n      });\n    };\n  }, []);\n  const fetchRecordings = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5001/api/recordings', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch audio history');\n      }\n      const data = await response.json();\n      setRecordings(data);\n      setLoading(false);\n    } catch (err) {\n      setError(err.message);\n      setLoading(false);\n    }\n  };\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const formatTime = seconds => {\n    if (!seconds || isNaN(seconds) || !isFinite(seconds)) {\n      return '0:00';\n    }\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = Math.floor(seconds % 60);\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n  const handlePlayPause = recordingId => {\n    const audioElement = audioRefs.current[recordingId];\n    if (playingId === recordingId) {\n      audioElement.pause();\n      setPlayingId(null);\n      clearInterval(progressIntervals.current[recordingId]);\n    } else {\n      // Stop any currently playing audio\n      if (playingId) {\n        audioRefs.current[playingId].pause();\n        clearInterval(progressIntervals.current[playingId]);\n      }\n      audioElement.play();\n      setPlayingId(recordingId);\n\n      // Start progress tracking\n      progressIntervals.current[recordingId] = setInterval(() => {\n        setAudioProgress(prev => ({\n          ...prev,\n          [recordingId]: audioElement.currentTime\n        }));\n      }, 100);\n    }\n  };\n  const handleAudioEnded = recordingId => {\n    if (playingId === recordingId) {\n      setPlayingId(null);\n      clearInterval(progressIntervals.current[recordingId]);\n      setAudioProgress(prev => ({\n        ...prev,\n        [recordingId]: 0\n      }));\n    }\n  };\n  const handleProgressClick = (e, recordingId) => {\n    const progressBar = e.currentTarget;\n    const rect = progressBar.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const percentage = x / rect.width;\n    const audioElement = audioRefs.current[recordingId];\n    if (audioElement) {\n      const newTime = percentage * audioDurations[recordingId];\n      audioElement.currentTime = newTime;\n      setAudioProgress(prev => ({\n        ...prev,\n        [recordingId]: newTime\n      }));\n    }\n  };\n  const handleLoadedMetadata = recordingId => {\n    const audioElement = audioRefs.current[recordingId];\n    if (audioElement) {\n      const loadDuration = () => {\n        const duration = audioElement.duration;\n        if (isFinite(duration) && !isNaN(duration) && (!audioDurations[recordingId] || audioDurations[recordingId] !== duration)) {\n          setAudioDurations(prev => ({\n            ...prev,\n            [recordingId]: duration\n          }));\n        }\n      };\n      loadDuration(); // Try to load duration immediately\n      audioElement.addEventListener('canplay', loadDuration); // Also try when audio is ready to play\n      return () => {\n        audioElement.removeEventListener('canplay', loadDuration);\n      };\n    }\n  };\n  const handleDownload = async recording => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:5001${recording.url}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to download recording');\n      }\n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `${recording.title || 'recording'}.mp3`;\n      document.body.appendChild(a);\n      a.click();\n      window.URL.revokeObjectURL(url);\n      document.body.removeChild(a);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"audio-history-container loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"audio-history-container error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-history-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Audio History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), recordings.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-recordings\",\n      children: \"No audio recordings found. Upload audio to see your history here!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recordings-list\",\n      children: recordings.map(recording => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recording-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recording-info\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recording-header\",\n            children: [recording.artworkUrl ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recording-artwork\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `http://localhost:5001${recording.artworkUrl}`,\n                alt: \"Recording artwork\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recording-artwork-placeholder\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"No Artwork\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recording-title-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: recording.title || 'Untitled Recording'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"recording-date\",\n                children: formatDate(recording.createdAt)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 21\n              }, this), recording.description && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"recording-description\",\n                children: recording.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 23\n              }, this), recording.shareWith && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"shared-with\",\n                children: [\"Shared with: \", recording.shareWith]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recording-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `play-pause-button ${playingId === recording._id ? 'playing' : ''}`,\n            onClick: () => handlePlayPause(recording._id),\n            children: playingId === recording._id ? 'Pause' : 'Play'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"audio-progress\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              onClick: e => handleProgressClick(e, recording._id),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-fill\",\n                style: {\n                  width: `${(audioProgress[recording._id] || 0) / (audioDurations[recording._id] || 1) * 100}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"time-display\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: formatTime(audioProgress[recording._id] || 0)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: formatTime(audioDurations[recording._id] || 0)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n            ref: el => {\n              audioRefs.current[recording._id] = el;\n              if (el) {\n                el.preload = \"metadata\";\n                handleLoadedMetadata(recording._id);\n              }\n            },\n            src: `http://localhost:5001${recording.url}`,\n            onEnded: () => handleAudioEnded(recording._id),\n            preload: \"metadata\",\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"download-button\",\n            onClick: () => handleDownload(recording),\n            children: \"Download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 15\n        }, this)]\n      }, recording._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioHistory, \"uXUTMIZNoTXcLmExphzclbki5zM=\", false, function () {\n  return [useNavigate];\n});\n_c = AudioHistory;\nexport default AudioHistory;\nvar _c;\n$RefreshReg$(_c, \"AudioHistory\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","jsxDEV","_jsxDEV","AudioHistory","_s","recordings","setRecordings","loading","setLoading","error","setError","playingId","setPlayingId","audioProgress","setAudioProgress","audioDurations","setAudioDurations","audioRefs","progressIntervals","navigate","token","localStorage","getItem","fetchRecordings","Object","values","current","forEach","interval","clearInterval","response","fetch","headers","ok","Error","data","json","err","message","formatDate","dateString","Date","toLocaleString","year","month","day","hour","minute","formatTime","seconds","isNaN","isFinite","minutes","Math","floor","remainingSeconds","toString","padStart","handlePlayPause","recordingId","audioElement","pause","play","setInterval","prev","currentTime","handleAudioEnded","handleProgressClick","e","progressBar","currentTarget","rect","getBoundingClientRect","x","clientX","left","percentage","width","newTime","handleLoadedMetadata","loadDuration","duration","addEventListener","removeEventListener","handleDownload","recording","url","blob","window","URL","createObjectURL","a","document","createElement","href","download","title","body","appendChild","click","revokeObjectURL","removeChild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","artworkUrl","src","alt","createdAt","description","shareWith","_id","onClick","style","ref","el","preload","onEnded","display","_c","$RefreshReg$"],"sources":["/Users/davidmcguire/Desktop/Master/Cursor/AudioZoom/client/src/pages/AudioHistory.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './AudioHistory.css';\n\nconst AudioHistory = () => {\n  const [recordings, setRecordings] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [playingId, setPlayingId] = useState(null);\n  const [audioProgress, setAudioProgress] = useState({});\n  const [audioDurations, setAudioDurations] = useState({});\n  const audioRefs = useRef({});\n  const progressIntervals = useRef({});\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login');\n      return;\n    }\n    fetchRecordings();\n  }, [navigate]);\n\n  // Cleanup intervals on unmount\n  useEffect(() => {\n    return () => {\n      Object.values(progressIntervals.current).forEach(interval => {\n        clearInterval(interval);\n      });\n    };\n  }, []);\n\n  const fetchRecordings = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5001/api/recordings', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch audio history');\n      }\n      const data = await response.json();\n      setRecordings(data);\n      setLoading(false);\n    } catch (err) {\n      setError(err.message);\n      setLoading(false);\n    }\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  const formatTime = (seconds) => {\n    if (!seconds || isNaN(seconds) || !isFinite(seconds)) {\n      return '0:00';\n    }\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = Math.floor(seconds % 60);\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n\n  const handlePlayPause = (recordingId) => {\n    const audioElement = audioRefs.current[recordingId];\n    \n    if (playingId === recordingId) {\n      audioElement.pause();\n      setPlayingId(null);\n      clearInterval(progressIntervals.current[recordingId]);\n    } else {\n      // Stop any currently playing audio\n      if (playingId) {\n        audioRefs.current[playingId].pause();\n        clearInterval(progressIntervals.current[playingId]);\n      }\n      audioElement.play();\n      setPlayingId(recordingId);\n      \n      // Start progress tracking\n      progressIntervals.current[recordingId] = setInterval(() => {\n        setAudioProgress(prev => ({\n          ...prev,\n          [recordingId]: audioElement.currentTime\n        }));\n      }, 100);\n    }\n  };\n\n  const handleAudioEnded = (recordingId) => {\n    if (playingId === recordingId) {\n      setPlayingId(null);\n      clearInterval(progressIntervals.current[recordingId]);\n      setAudioProgress(prev => ({\n        ...prev,\n        [recordingId]: 0\n      }));\n    }\n  };\n\n  const handleProgressClick = (e, recordingId) => {\n    const progressBar = e.currentTarget;\n    const rect = progressBar.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const percentage = x / rect.width;\n    const audioElement = audioRefs.current[recordingId];\n    \n    if (audioElement) {\n      const newTime = percentage * audioDurations[recordingId];\n      audioElement.currentTime = newTime;\n      setAudioProgress(prev => ({\n        ...prev,\n        [recordingId]: newTime\n      }));\n    }\n  };\n\n  const handleLoadedMetadata = (recordingId) => {\n    const audioElement = audioRefs.current[recordingId];\n    if (audioElement) {\n      const loadDuration = () => {\n        const duration = audioElement.duration;\n        if (isFinite(duration) && !isNaN(duration) && (!audioDurations[recordingId] || audioDurations[recordingId] !== duration)) {\n          setAudioDurations(prev => ({\n            ...prev,\n            [recordingId]: duration\n          }));\n        }\n      };\n\n      loadDuration(); // Try to load duration immediately\n      audioElement.addEventListener('canplay', loadDuration); // Also try when audio is ready to play\n      return () => {\n        audioElement.removeEventListener('canplay', loadDuration);\n      };\n    }\n  };\n\n  const handleDownload = async (recording) => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:5001${recording.url}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      \n      if (!response.ok) {\n        throw new Error('Failed to download recording');\n      }\n\n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `${recording.title || 'recording'}.mp3`;\n      document.body.appendChild(a);\n      a.click();\n      window.URL.revokeObjectURL(url);\n      document.body.removeChild(a);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  if (loading) {\n    return <div className=\"audio-history-container loading\">Loading...</div>;\n  }\n\n  if (error) {\n    return <div className=\"audio-history-container error\">{error}</div>;\n  }\n\n  return (\n    <div className=\"audio-history-container\">\n      <h1>My Audio History</h1>\n      \n      {recordings.length === 0 ? (\n        <p className=\"no-recordings\">No audio recordings found. Upload audio to see your history here!</p>\n      ) : (\n        <div className=\"recordings-list\">\n          {recordings.map((recording) => (\n            <div key={recording._id} className=\"recording-item\">\n              <div className=\"recording-info\">\n                <div className=\"recording-header\">\n                  {recording.artworkUrl ? (\n                    <div className=\"recording-artwork\">\n                      <img src={`http://localhost:5001${recording.artworkUrl}`} alt=\"Recording artwork\" />\n                    </div>\n                  ) : (\n                    <div className=\"recording-artwork-placeholder\">\n                      <span>No Artwork</span>\n                    </div>\n                  )}\n                  <div className=\"recording-title-section\">\n                    <h3>{recording.title || 'Untitled Recording'}</h3>\n                    <p className=\"recording-date\">{formatDate(recording.createdAt)}</p>\n                    {recording.description && (\n                      <p className=\"recording-description\">{recording.description}</p>\n                    )}\n                    {recording.shareWith && (\n                      <p className=\"shared-with\">Shared with: {recording.shareWith}</p>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <div className=\"recording-controls\">\n                <button \n                  className={`play-pause-button ${playingId === recording._id ? 'playing' : ''}`}\n                  onClick={() => handlePlayPause(recording._id)}\n                >\n                  {playingId === recording._id ? 'Pause' : 'Play'}\n                </button>\n                \n                <div className=\"audio-progress\">\n                  <div \n                    className=\"progress-bar\"\n                    onClick={(e) => handleProgressClick(e, recording._id)}\n                  >\n                    <div \n                      className=\"progress-fill\"\n                      style={{ \n                        width: `${(audioProgress[recording._id] || 0) / (audioDurations[recording._id] || 1) * 100}%` \n                      }}\n                    />\n                  </div>\n                  <div className=\"time-display\">\n                    <span>{formatTime(audioProgress[recording._id] || 0)}</span>\n                    <span>{formatTime(audioDurations[recording._id] || 0)}</span>\n                  </div>\n                </div>\n\n                <audio\n                  ref={el => {\n                    audioRefs.current[recording._id] = el;\n                    if (el) {\n                      el.preload = \"metadata\";\n                      handleLoadedMetadata(recording._id);\n                    }\n                  }}\n                  src={`http://localhost:5001${recording.url}`}\n                  onEnded={() => handleAudioEnded(recording._id)}\n                  preload=\"metadata\"\n                  style={{ display: 'none' }}\n                />\n                \n                <button \n                  className=\"download-button\"\n                  onClick={() => handleDownload(recording)}\n                >\n                  Download\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AudioHistory; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}