{"ast":null,"code":"import React,{useState}from'react';import{useNavigate,Link}from'react-router-dom';import{GoogleLogin}from'@react-oauth/google';import{jwtDecode}from'jwt-decode';import'./Login.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Login=()=>{const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[error,setError]=useState('');const navigate=useNavigate();const handleSubmit=async e=>{e.preventDefault();setError('');// Clear previous errors\ntry{console.log('Attempting login for:',email);// Validate inputs\nif(!email||!password){setError('Email and password are required');return;}const response=await fetch('http://localhost:5001/api/auth/login',{method:'POST',headers:{'Content-Type':'application/json'},credentials:'include',// Include credentials (cookies)\nbody:JSON.stringify({email,password})});// Handle network errors\nif(!response){throw new Error('Network error - could not connect to server');}const data=await response.json();console.log('Login response status:',response.status);if(!response.ok){console.error('Login failed:',data.error);throw new Error(data.error||'Login failed');}console.log('Login successful');// Store the token in localStorage\nlocalStorage.setItem('token',data.token);localStorage.setItem('userId',data.userId);// Redirect to home page\nnavigate('/');}catch(err){console.error('Login error:',err);setError(err.message);}};const handleGoogleSuccess=async credentialResponse=>{try{const decoded=jwtDecode(credentialResponse.credential);const response=await fetch('http://localhost:5001/api/auth/google',{method:'POST',headers:{'Content-Type':'application/json'},credentials:'include',body:JSON.stringify({email:decoded.email,name:decoded.name,googleId:decoded.sub,picture:decoded.picture})});const data=await response.json();if(!response.ok){throw new Error(data.message||'Google login failed');}localStorage.setItem('token',data.token);localStorage.setItem('userId',data.userId);navigate('/');}catch(err){setError(err.message);}};const handleGoogleError=()=>{setError('Google login failed. Please try again.');};return/*#__PURE__*/_jsx(\"div\",{className:\"login-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"login-box\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Login\"}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsx(\"div\",{className:\"google-login-container\",children:/*#__PURE__*/_jsx(GoogleLogin,{onSuccess:handleGoogleSuccess,onError:handleGoogleError,useOneTap:true})}),/*#__PURE__*/_jsx(\"div\",{className:\"divider\",children:/*#__PURE__*/_jsx(\"span\",{children:\"or\"})}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",value:email,onChange:e=>setEmail(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",value:password,onChange:e=>setPassword(e.target.value),required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"login-button\",children:\"Login with Email\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"register-link\",children:[\"Don't have an account? \",/*#__PURE__*/_jsx(Link,{to:\"/register\",children:\"Sign up\"})]})]})});};export default Login;","map":{"version":3,"names":["React","useState","useNavigate","Link","GoogleLogin","jwtDecode","jsx","_jsx","jsxs","_jsxs","Login","email","setEmail","password","setPassword","error","setError","navigate","handleSubmit","e","preventDefault","console","log","response","fetch","method","headers","credentials","body","JSON","stringify","Error","data","json","status","ok","localStorage","setItem","token","userId","err","message","handleGoogleSuccess","credentialResponse","decoded","credential","name","googleId","sub","picture","handleGoogleError","className","children","onSuccess","onError","useOneTap","onSubmit","htmlFor","type","id","value","onChange","target","required","to"],"sources":["/Users/davidmcguire/Desktop/Master/Cursor/AudioZoom/client/src/pages/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { GoogleLogin } from '@react-oauth/google';\nimport { jwtDecode } from 'jwt-decode';\nimport './Login.css';\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError(''); // Clear previous errors\n    \n    try {\n      console.log('Attempting login for:', email);\n      \n      // Validate inputs\n      if (!email || !password) {\n        setError('Email and password are required');\n        return;\n      }\n      \n      const response = await fetch('http://localhost:5001/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'include', // Include credentials (cookies)\n        body: JSON.stringify({ email, password }),\n      });\n\n      // Handle network errors\n      if (!response) {\n        throw new Error('Network error - could not connect to server');\n      }\n      \n      const data = await response.json();\n      console.log('Login response status:', response.status);\n\n      if (!response.ok) {\n        console.error('Login failed:', data.error);\n        throw new Error(data.error || 'Login failed');\n      }\n\n      console.log('Login successful');\n      // Store the token in localStorage\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('userId', data.userId);\n      \n      // Redirect to home page\n      navigate('/');\n    } catch (err) {\n      console.error('Login error:', err);\n      setError(err.message);\n    }\n  };\n\n  const handleGoogleSuccess = async (credentialResponse) => {\n    try {\n      const decoded = jwtDecode(credentialResponse.credential);\n      const response = await fetch('http://localhost:5001/api/auth/google', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          email: decoded.email,\n          name: decoded.name,\n          googleId: decoded.sub,\n          picture: decoded.picture\n        }),\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message || 'Google login failed');\n      }\n\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('userId', data.userId);\n      navigate('/');\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const handleGoogleError = () => {\n    setError('Google login failed. Please try again.');\n  };\n\n  return (\n    <div className=\"login-container\">\n      <div className=\"login-box\">\n        <h1>Login</h1>\n        {error && <div className=\"error-message\">{error}</div>}\n        \n        <div className=\"google-login-container\">\n          <GoogleLogin\n            onSuccess={handleGoogleSuccess}\n            onError={handleGoogleError}\n            useOneTap\n          />\n        </div>\n        \n        <div className=\"divider\">\n          <span>or</span>\n        </div>\n\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n            />\n          </div>\n          <button type=\"submit\" className=\"login-button\">Login with Email</button>\n        </form>\n        \n        <div className=\"register-link\">\n          Don't have an account? <Link to=\"/register\">Sign up</Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}