{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{Container,Row,Col,Card,Table,Form}from'react-bootstrap';import{Line}from'react-chartjs-2';import{Chart as ChartJS,CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend,Filler}from'chart.js';import api from'../utils/api';import'./AdminDashboard.css';// Register Chart.js components\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend,Filler);const AdminDashboard=()=>{console.log('AdminDashboard component rendering');const[revenue,setRevenue]=useState({totalRevenue:{totalAmount:0,totalPlatformFee:0,totalCreatorAmount:0,count:0},revenueByMethod:[],dailyRevenue:[]});const[dateRange,setDateRange]=useState({startDate:new Date(new Date().setDate(new Date().getDate()-30)).toISOString().split('T')[0],endDate:new Date().toISOString().split('T')[0]});const[loading,setLoading]=useState(true);const[error,setError]=useState('');const fetchRevenueData=useCallback(async()=>{try{console.log('Fetching revenue data with date range:',dateRange);setLoading(true);setError('');const response=await api.get('/api/admin/revenue',{params:dateRange});console.log('Revenue data received:',response.data);setRevenue(response.data);}catch(err){console.error('Revenue data error details:',err.response||err);setError('Failed to fetch revenue data. Please try again.');}finally{setLoading(false);}},[dateRange]);useEffect(()=>{console.log('AdminDashboard useEffect triggered');fetchRevenueData();},[fetchRevenueData]);const handleDateChange=e=>{const{name,value}=e.target;setDateRange(prev=>({...prev,[name]:value}));};// Format currency\nconst formatCurrency=amount=>{return new Intl.NumberFormat('en-US',{style:'currency',currency:'USD'}).format(amount/100);// Convert cents to dollars\n};// Prepare chart data\nconsole.log('Preparing chart data with daily revenue:',revenue.dailyRevenue);const chartData={labels:revenue.dailyRevenue.map(day=>day._id),datasets:[{label:'Platform Revenue',data:revenue.dailyRevenue.map(day=>day.totalPlatformFee/100),borderColor:'rgba(75, 192, 192, 1)',backgroundColor:'rgba(75, 192, 192, 0.2)',fill:true,tension:0.4}]};// Chart options\nconst chartOptions={responsive:true,maintainAspectRatio:false,plugins:{legend:{position:'top'},title:{display:true,text:'Daily Platform Revenue'}},scales:{y:{beginAtZero:true,ticks:{callback:value=>`$${value}`}}}};return/*#__PURE__*/_jsxs(Container,{className:\"admin-dashboard\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Revenue Dashboard\"}),/*#__PURE__*/_jsx(Form,{className:\"date-range-form\",children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:5,children:/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Start Date\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"date\",name:\"startDate\",value:dateRange.startDate,onChange:handleDateChange})]})}),/*#__PURE__*/_jsx(Col,{md:5,children:/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"End Date\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"date\",name:\"endDate\",value:dateRange.endDate,onChange:handleDateChange})]})})]})}),loading?/*#__PURE__*/_jsx(\"p\",{children:\"Loading revenue data...\"}):error?/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:error}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Row,{className:\"summary-cards\",children:[/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(Card,{className:\"summary-card\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{children:\"Total Revenue\"}),/*#__PURE__*/_jsx(Card.Text,{className:\"amount\",children:formatCurrency(revenue.totalRevenue.totalAmount)})]})})}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(Card,{className:\"summary-card\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{children:\"Platform Revenue\"}),/*#__PURE__*/_jsx(Card.Text,{className:\"amount\",children:formatCurrency(revenue.totalRevenue.totalPlatformFee)})]})})}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(Card,{className:\"summary-card\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{children:\"Creator Payouts\"}),/*#__PURE__*/_jsx(Card.Text,{className:\"amount\",children:formatCurrency(revenue.totalRevenue.totalCreatorAmount)})]})})}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(Card,{className:\"summary-card\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{children:\"Total Transactions\"}),/*#__PURE__*/_jsx(Card.Text,{className:\"amount\",children:revenue.totalRevenue.count})]})})})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:8,children:/*#__PURE__*/_jsx(Card,{className:\"chart-card\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{children:\"Daily Platform Revenue\"}),/*#__PURE__*/_jsx(Line,{data:chartData,options:chartOptions})]})})}),/*#__PURE__*/_jsx(Col,{md:4,children:/*#__PURE__*/_jsx(Card,{className:\"method-card\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{children:\"Revenue by Payment Method\"}),/*#__PURE__*/_jsxs(Table,{striped:true,bordered:true,hover:true,children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Method\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Revenue\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Transactions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:revenue.revenueByMethod.map(method=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:method._id.charAt(0).toUpperCase()+method._id.slice(1)}),/*#__PURE__*/_jsx(\"td\",{children:formatCurrency(method.totalPlatformFee)}),/*#__PURE__*/_jsx(\"td\",{children:method.count})]},method._id))})]})]})})})]})]})]});};export default AdminDashboard;","map":{"version":3,"names":["React","useState","useEffect","useCallback","Container","Row","Col","Card","Table","Form","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","api","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","register","AdminDashboard","console","log","revenue","setRevenue","totalRevenue","totalAmount","totalPlatformFee","totalCreatorAmount","count","revenueByMethod","dailyRevenue","dateRange","setDateRange","startDate","Date","setDate","getDate","toISOString","split","endDate","loading","setLoading","error","setError","fetchRevenueData","response","get","params","data","err","handleDateChange","e","name","value","target","prev","formatCurrency","amount","Intl","NumberFormat","style","currency","format","chartData","labels","map","day","_id","datasets","label","borderColor","backgroundColor","fill","tension","chartOptions","responsive","maintainAspectRatio","plugins","legend","position","title","display","text","scales","y","beginAtZero","ticks","callback","className","children","md","Group","Label","Control","type","onChange","Body","Text","options","striped","bordered","hover","method","charAt","toUpperCase","slice"],"sources":["/Users/davidmcguire/Desktop/Master/Cursor/AudioZoom/client/src/pages/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Container, Row, Col, Card, Table, Form } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n} from 'chart.js';\nimport api from '../utils/api';\nimport './AdminDashboard.css';\n\n// Register Chart.js components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n);\n\nconst AdminDashboard = () => {\n  console.log('AdminDashboard component rendering');\n  \n  const [revenue, setRevenue] = useState({\n    totalRevenue: { totalAmount: 0, totalPlatformFee: 0, totalCreatorAmount: 0, count: 0 },\n    revenueByMethod: [],\n    dailyRevenue: []\n  });\n  const [dateRange, setDateRange] = useState({\n    startDate: new Date(new Date().setDate(new Date().getDate() - 30)).toISOString().split('T')[0],\n    endDate: new Date().toISOString().split('T')[0]\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  const fetchRevenueData = useCallback(async () => {\n    try {\n      console.log('Fetching revenue data with date range:', dateRange);\n      setLoading(true);\n      setError('');\n      \n      const response = await api.get('/api/admin/revenue', {\n        params: dateRange\n      });\n      \n      console.log('Revenue data received:', response.data);\n      setRevenue(response.data);\n    } catch (err) {\n      console.error('Revenue data error details:', err.response || err);\n      setError('Failed to fetch revenue data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  }, [dateRange]);\n\n  useEffect(() => {\n    console.log('AdminDashboard useEffect triggered');\n    fetchRevenueData();\n  }, [fetchRevenueData]);\n\n  const handleDateChange = (e) => {\n    const { name, value } = e.target;\n    setDateRange(prev => ({ ...prev, [name]: value }));\n  };\n\n  // Format currency\n  const formatCurrency = (amount) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(amount / 100); // Convert cents to dollars\n  };\n\n  // Prepare chart data\n  console.log('Preparing chart data with daily revenue:', revenue.dailyRevenue);\n  const chartData = {\n    labels: revenue.dailyRevenue.map(day => day._id),\n    datasets: [\n      {\n        label: 'Platform Revenue',\n        data: revenue.dailyRevenue.map(day => day.totalPlatformFee / 100),\n        borderColor: 'rgba(75, 192, 192, 1)',\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\n        fill: true,\n        tension: 0.4\n      }\n    ]\n  };\n\n  // Chart options\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Daily Platform Revenue'\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        ticks: {\n          callback: (value) => `$${value}`\n        }\n      }\n    }\n  };\n\n  return (\n    <Container className=\"admin-dashboard\">\n      <h1>Revenue Dashboard</h1>\n      \n      <Form className=\"date-range-form\">\n        <Row>\n          <Col md={5}>\n            <Form.Group>\n              <Form.Label>Start Date</Form.Label>\n              <Form.Control\n                type=\"date\"\n                name=\"startDate\"\n                value={dateRange.startDate}\n                onChange={handleDateChange}\n              />\n            </Form.Group>\n          </Col>\n          <Col md={5}>\n            <Form.Group>\n              <Form.Label>End Date</Form.Label>\n              <Form.Control\n                type=\"date\"\n                name=\"endDate\"\n                value={dateRange.endDate}\n                onChange={handleDateChange}\n              />\n            </Form.Group>\n          </Col>\n        </Row>\n      </Form>\n      \n      {loading ? (\n        <p>Loading revenue data...</p>\n      ) : error ? (\n        <p className=\"error\">{error}</p>\n      ) : (\n        <>\n          <Row className=\"summary-cards\">\n            <Col md={3}>\n              <Card className=\"summary-card\">\n                <Card.Body>\n                  <Card.Title>Total Revenue</Card.Title>\n                  <Card.Text className=\"amount\">\n                    {formatCurrency(revenue.totalRevenue.totalAmount)}\n                  </Card.Text>\n                </Card.Body>\n              </Card>\n            </Col>\n            <Col md={3}>\n              <Card className=\"summary-card\">\n                <Card.Body>\n                  <Card.Title>Platform Revenue</Card.Title>\n                  <Card.Text className=\"amount\">\n                    {formatCurrency(revenue.totalRevenue.totalPlatformFee)}\n                  </Card.Text>\n                </Card.Body>\n              </Card>\n            </Col>\n            <Col md={3}>\n              <Card className=\"summary-card\">\n                <Card.Body>\n                  <Card.Title>Creator Payouts</Card.Title>\n                  <Card.Text className=\"amount\">\n                    {formatCurrency(revenue.totalRevenue.totalCreatorAmount)}\n                  </Card.Text>\n                </Card.Body>\n              </Card>\n            </Col>\n            <Col md={3}>\n              <Card className=\"summary-card\">\n                <Card.Body>\n                  <Card.Title>Total Transactions</Card.Title>\n                  <Card.Text className=\"amount\">\n                    {revenue.totalRevenue.count}\n                  </Card.Text>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n          \n          <Row>\n            <Col md={8}>\n              <Card className=\"chart-card\">\n                <Card.Body>\n                  <Card.Title>Daily Platform Revenue</Card.Title>\n                  <Line data={chartData} options={chartOptions} />\n                </Card.Body>\n              </Card>\n            </Col>\n            <Col md={4}>\n              <Card className=\"method-card\">\n                <Card.Body>\n                  <Card.Title>Revenue by Payment Method</Card.Title>\n                  <Table striped bordered hover>\n                    <thead>\n                      <tr>\n                        <th>Method</th>\n                        <th>Revenue</th>\n                        <th>Transactions</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {revenue.revenueByMethod.map(method => (\n                        <tr key={method._id}>\n                          <td>{method._id.charAt(0).toUpperCase() + method._id.slice(1)}</td>\n                          <td>{formatCurrency(method.totalPlatformFee)}</td>\n                          <td>{method.count}</td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </Table>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default AdminDashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}