{"ast":null,"code":"var _jsxFileName = \"/Users/davidmcguire/Desktop/Master/Cursor/AudioZoom/client/src/pages/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { GoogleLogin } from '@react-oauth/google';\nimport { jwtDecode } from 'jwt-decode';\nimport styled from 'styled-components';\nimport Logo from '../components/Logo';\nimport Card from '../components/Card';\nimport Button from '../components/Button';\nimport Input from '../components/Input';\nimport api from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginContainer = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: calc(100vh - 200px);\n`;\n_c = LoginContainer;\nconst LoginBox = styled(Card)`\n  width: 100%;\n  max-width: 450px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n`;\n_c2 = LoginBox;\nconst LoginHeader = styled(Card.Header)`\n  text-align: center;\n  border-bottom: none;\n  padding-bottom: 0;\n`;\n_c3 = LoginHeader;\nconst LoginTitle = styled.h1`\n  font-size: 1.75rem;\n  color: ${props => props.theme.colors.text};\n  font-weight: 700;\n  margin: 0;\n`;\n_c4 = LoginTitle;\nconst LoginForm = styled.form`\n  width: 100%;\n`;\n_c5 = LoginForm;\nconst GoogleLoginContainer = styled.div`\n  margin-bottom: 1.5rem;\n  display: flex;\n  justify-content: center;\n`;\n_c6 = GoogleLoginContainer;\nconst Divider = styled.div`\n  display: flex;\n  align-items: center;\n  text-align: center;\n  margin: 1.5rem 0;\n  \n  &::before,\n  &::after {\n    content: '';\n    flex: 1;\n    border-bottom: 1px solid #ddd;\n  }\n  \n  span {\n    padding: 0 1rem;\n    color: #666;\n    font-size: 0.9rem;\n  }\n`;\n_c7 = Divider;\nconst RegisterLink = styled.div`\n  text-align: center;\n  margin-top: 1.5rem;\n  color: #666;\n  \n  a {\n    color: ${props => props.theme.colors.primary};\n    font-weight: 600;\n    margin-left: 0.5rem;\n    \n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n_c8 = RegisterLink;\nconst ErrorMessage = styled.div`\n  color: ${props => props.theme.colors.error};\n  background-color: rgba(255, 68, 68, 0.1);\n  border: 1px solid rgba(255, 68, 68, 0.2);\n  border-radius: 4px;\n  padding: 0.75rem 1rem;\n  margin-bottom: 1rem;\n  font-size: 0.9rem;\n`;\n_c9 = ErrorMessage;\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(''); // Clear previous errors\n\n    try {\n      console.log('Attempting login for:', email);\n\n      // Validate inputs\n      if (!email || !password) {\n        setError('Email and password are required');\n        return;\n      }\n      const response = await api.post('/api/auth/login', {\n        email,\n        password\n      });\n      console.log('Login response status:', response.status);\n\n      // Store the token in localStorage\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('userId', response.data.userId);\n      console.log('Login successful');\n\n      // Redirect to home page\n      navigate('/');\n    } catch (err) {\n      console.error('Login error:', err);\n      if (err.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        setError(err.response.data.error || 'Login failed');\n      } else if (err.request) {\n        // The request was made but no response was received\n        setError('Network error - could not connect to server. Please make sure the server is running.');\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        setError(err.message || 'Login failed');\n      }\n    }\n  };\n  const handleGoogleSuccess = async credentialResponse => {\n    try {\n      const decoded = jwtDecode(credentialResponse.credential);\n      const response = await api.post('/api/auth/google', {\n        email: decoded.email,\n        name: decoded.name,\n        googleId: decoded.sub,\n        picture: decoded.picture\n      });\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('userId', response.data.userId);\n      navigate('/');\n    } catch (err) {\n      console.error('Google login error:', err);\n      if (err.response) {\n        setError(err.response.data.message || 'Google login failed');\n      } else if (err.request) {\n        setError('Network error - could not connect to server. Please make sure the server is running.');\n      } else {\n        setError(err.message || 'Google login failed');\n      }\n    }\n  };\n  const handleGoogleError = () => {\n    setError('Google login failed. Please try again.');\n  };\n  return /*#__PURE__*/_jsxDEV(LoginContainer, {\n    children: /*#__PURE__*/_jsxDEV(LoginBox, {\n      children: [/*#__PURE__*/_jsxDEV(LoginHeader, {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {\n          size: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LoginTitle, {\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLoginContainer, {\n          children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n            onSuccess: handleGoogleSuccess,\n            onError: handleGoogleError,\n            useOneTap: true,\n            theme: \"outline\",\n            shape: \"pill\",\n            text: \"signin_with\",\n            size: \"large\",\n            width: \"250\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"OR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LoginForm, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            label: \"Email\",\n            id: \"email\",\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            placeholder: \"Enter your email\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            label: \"Password\",\n            id: \"password\",\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            placeholder: \"Enter your password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"primary\",\n            fullWidth: true,\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RegisterLink, {\n          children: [\"Don't have an account?\", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/register\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"04s5JR+/x8JdloJ2sm+29L/IvyI=\", false, function () {\n  return [useNavigate];\n});\n_c10 = Login;\nexport default Login;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n$RefreshReg$(_c, \"LoginContainer\");\n$RefreshReg$(_c2, \"LoginBox\");\n$RefreshReg$(_c3, \"LoginHeader\");\n$RefreshReg$(_c4, \"LoginTitle\");\n$RefreshReg$(_c5, \"LoginForm\");\n$RefreshReg$(_c6, \"GoogleLoginContainer\");\n$RefreshReg$(_c7, \"Divider\");\n$RefreshReg$(_c8, \"RegisterLink\");\n$RefreshReg$(_c9, \"ErrorMessage\");\n$RefreshReg$(_c10, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","Link","GoogleLogin","jwtDecode","styled","Logo","Card","Button","Input","api","jsxDEV","_jsxDEV","LoginContainer","div","_c","LoginBox","_c2","LoginHeader","Header","_c3","LoginTitle","h1","props","theme","colors","text","_c4","LoginForm","form","_c5","GoogleLoginContainer","_c6","Divider","_c7","RegisterLink","primary","_c8","ErrorMessage","error","_c9","Login","_s","email","setEmail","password","setPassword","setError","navigate","handleSubmit","e","preventDefault","console","log","response","post","status","localStorage","setItem","data","token","userId","err","request","message","handleGoogleSuccess","credentialResponse","decoded","credential","name","googleId","sub","picture","handleGoogleError","children","size","fileName","_jsxFileName","lineNumber","columnNumber","Body","onSuccess","onError","useOneTap","shape","width","onSubmit","label","id","type","value","onChange","target","placeholder","required","variant","fullWidth","to","_c10","$RefreshReg$"],"sources":["/Users/davidmcguire/Desktop/Master/Cursor/AudioZoom/client/src/pages/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { GoogleLogin } from '@react-oauth/google';\nimport { jwtDecode } from 'jwt-decode';\nimport styled from 'styled-components';\nimport Logo from '../components/Logo';\nimport Card from '../components/Card';\nimport Button from '../components/Button';\nimport Input from '../components/Input';\nimport api from '../utils/api';\n\nconst LoginContainer = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: calc(100vh - 200px);\n`;\n\nconst LoginBox = styled(Card)`\n  width: 100%;\n  max-width: 450px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n`;\n\nconst LoginHeader = styled(Card.Header)`\n  text-align: center;\n  border-bottom: none;\n  padding-bottom: 0;\n`;\n\nconst LoginTitle = styled.h1`\n  font-size: 1.75rem;\n  color: ${props => props.theme.colors.text};\n  font-weight: 700;\n  margin: 0;\n`;\n\nconst LoginForm = styled.form`\n  width: 100%;\n`;\n\nconst GoogleLoginContainer = styled.div`\n  margin-bottom: 1.5rem;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Divider = styled.div`\n  display: flex;\n  align-items: center;\n  text-align: center;\n  margin: 1.5rem 0;\n  \n  &::before,\n  &::after {\n    content: '';\n    flex: 1;\n    border-bottom: 1px solid #ddd;\n  }\n  \n  span {\n    padding: 0 1rem;\n    color: #666;\n    font-size: 0.9rem;\n  }\n`;\n\nconst RegisterLink = styled.div`\n  text-align: center;\n  margin-top: 1.5rem;\n  color: #666;\n  \n  a {\n    color: ${props => props.theme.colors.primary};\n    font-weight: 600;\n    margin-left: 0.5rem;\n    \n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  color: ${props => props.theme.colors.error};\n  background-color: rgba(255, 68, 68, 0.1);\n  border: 1px solid rgba(255, 68, 68, 0.2);\n  border-radius: 4px;\n  padding: 0.75rem 1rem;\n  margin-bottom: 1rem;\n  font-size: 0.9rem;\n`;\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError(''); // Clear previous errors\n    \n    try {\n      console.log('Attempting login for:', email);\n      \n      // Validate inputs\n      if (!email || !password) {\n        setError('Email and password are required');\n        return;\n      }\n      \n      const response = await api.post('/api/auth/login', { email, password });\n      console.log('Login response status:', response.status);\n\n      // Store the token in localStorage\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('userId', response.data.userId);\n      \n      console.log('Login successful');\n      \n      // Redirect to home page\n      navigate('/');\n    } catch (err) {\n      console.error('Login error:', err);\n      if (err.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        setError(err.response.data.error || 'Login failed');\n      } else if (err.request) {\n        // The request was made but no response was received\n        setError('Network error - could not connect to server. Please make sure the server is running.');\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        setError(err.message || 'Login failed');\n      }\n    }\n  };\n\n  const handleGoogleSuccess = async (credentialResponse) => {\n    try {\n      const decoded = jwtDecode(credentialResponse.credential);\n      const response = await api.post('/api/auth/google', {\n        email: decoded.email,\n        name: decoded.name,\n        googleId: decoded.sub,\n        picture: decoded.picture\n      });\n\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('userId', response.data.userId);\n      navigate('/');\n    } catch (err) {\n      console.error('Google login error:', err);\n      if (err.response) {\n        setError(err.response.data.message || 'Google login failed');\n      } else if (err.request) {\n        setError('Network error - could not connect to server. Please make sure the server is running.');\n      } else {\n        setError(err.message || 'Google login failed');\n      }\n    }\n  };\n\n  const handleGoogleError = () => {\n    setError('Google login failed. Please try again.');\n  };\n\n  return (\n    <LoginContainer>\n      <LoginBox>\n        <LoginHeader>\n          <Logo size=\"large\" />\n          <LoginTitle>Sign In</LoginTitle>\n        </LoginHeader>\n        \n        <Card.Body>\n          {error && <ErrorMessage>{error}</ErrorMessage>}\n          \n          <GoogleLoginContainer>\n            <GoogleLogin\n              onSuccess={handleGoogleSuccess}\n              onError={handleGoogleError}\n              useOneTap\n              theme=\"outline\"\n              shape=\"pill\"\n              text=\"signin_with\"\n              size=\"large\"\n              width=\"250\"\n            />\n          </GoogleLoginContainer>\n          \n          <Divider>\n            <span>OR</span>\n          </Divider>\n          \n          <LoginForm onSubmit={handleSubmit}>\n            <Input\n              label=\"Email\"\n              id=\"email\"\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              placeholder=\"Enter your email\"\n              required\n            />\n            \n            <Input\n              label=\"Password\"\n              id=\"password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              placeholder=\"Enter your password\"\n              required\n            />\n            \n            <Button \n              type=\"submit\" \n              variant=\"primary\" \n              fullWidth\n            >\n              Sign In\n            </Button>\n          </LoginForm>\n          \n          <RegisterLink>\n            Don't have an account?\n            <Link to=\"/register\">Sign Up</Link>\n          </RegisterLink>\n        </Card.Body>\n      </LoginBox>\n    </LoginContainer>\n  );\n};\n\nexport default Login; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}