{"ast":null,"code":"var _jsxFileName = \"/Users/davidmcguire/Desktop/Master/Cursor/AudioZoom/client/src/components/PaymentSettings.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Form, Alert, Card, Tabs, Tab, Spinner } from 'react-bootstrap';\nimport api from '../utils/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PaymentSettings = ({\n  user,\n  onUpdate\n}) => {\n  _s();\n  var _user$paymentSettings, _user$paymentSettings2, _user$paymentSettings3, _user$paymentSettings4;\n  const [activeTab, setActiveTab] = useState('stripe');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [paymentSettings, setPaymentSettings] = useState({\n    acceptsPayments: (user === null || user === void 0 ? void 0 : (_user$paymentSettings = user.paymentSettings) === null || _user$paymentSettings === void 0 ? void 0 : _user$paymentSettings.acceptsPayments) || false,\n    stripeAccountId: (user === null || user === void 0 ? void 0 : (_user$paymentSettings2 = user.paymentSettings) === null || _user$paymentSettings2 === void 0 ? void 0 : _user$paymentSettings2.stripeAccountId) || '',\n    paypalEmail: (user === null || user === void 0 ? void 0 : (_user$paymentSettings3 = user.paymentSettings) === null || _user$paymentSettings3 === void 0 ? void 0 : _user$paymentSettings3.paypalEmail) || '',\n    preferredCurrency: (user === null || user === void 0 ? void 0 : (_user$paymentSettings4 = user.paymentSettings) === null || _user$paymentSettings4 === void 0 ? void 0 : _user$paymentSettings4.preferredCurrency) || 'USD'\n  });\n\n  // Check URL parameters for Stripe success\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const stripeSuccess = urlParams.get('stripe');\n    if (stripeSuccess === 'success') {\n      setSuccess('Your Stripe account has been connected successfully!');\n      // Refresh user data to get updated Stripe account ID\n      if (onUpdate) {\n        fetchUserData();\n      }\n    }\n  }, []);\n  const fetchUserData = async () => {\n    try {\n      var _response$data, _response$data$paymen, _response$data2, _response$data2$payme, _response$data3, _response$data3$payme, _response$data4, _response$data4$payme;\n      const token = localStorage.getItem('token');\n      if (!token) return;\n      const response = await api.get('/api/users/me', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (onUpdate) {\n        onUpdate(response.data);\n      }\n      setPaymentSettings({\n        acceptsPayments: ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$paymen = _response$data.paymentSettings) === null || _response$data$paymen === void 0 ? void 0 : _response$data$paymen.acceptsPayments) || false,\n        stripeAccountId: ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$payme = _response$data2.paymentSettings) === null || _response$data2$payme === void 0 ? void 0 : _response$data2$payme.stripeAccountId) || '',\n        paypalEmail: ((_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : (_response$data3$payme = _response$data3.paymentSettings) === null || _response$data3$payme === void 0 ? void 0 : _response$data3$payme.paypalEmail) || '',\n        preferredCurrency: ((_response$data4 = response.data) === null || _response$data4 === void 0 ? void 0 : (_response$data4$payme = _response$data4.paymentSettings) === null || _response$data4$payme === void 0 ? void 0 : _response$data4$payme.preferredCurrency) || 'USD'\n      });\n    } catch (err) {\n      console.error('Error fetching user data:', err);\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setPaymentSettings({\n      ...paymentSettings,\n      [name]: type === 'checkbox' ? checked : value\n    });\n  };\n  const connectStripe = async () => {\n    try {\n      setLoading(true);\n      setError('');\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setError('You must be logged in to connect with Stripe.');\n        setLoading(false);\n        return;\n      }\n      console.log('Connecting to Stripe...');\n      const response = await api.post('/api/payments/create-stripe-account-link', {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log('Stripe response:', response.data);\n      const {\n        url\n      } = response.data;\n      if (!url) {\n        throw new Error('No redirect URL received from server');\n      }\n\n      // Redirect to Stripe Connect onboarding\n      window.location.href = url;\n    } catch (err) {\n      console.error('Stripe connect error:', err);\n      let errorMessage = 'Failed to connect with Stripe. Please try again.';\n      if (err.response) {\n        console.error('Error response:', err.response.data);\n        errorMessage = err.response.data.message || errorMessage;\n        if (err.response.data.error) {\n          errorMessage += ` (${err.response.data.error})`;\n        }\n      }\n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const savePaymentSettings = async () => {\n    try {\n      setLoading(true);\n      setError('');\n      setSuccess('');\n      const token = localStorage.getItem('token');\n      await api.put('/api/users/payment-settings', paymentSettings, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setSuccess('Payment settings saved successfully!');\n      if (onUpdate) onUpdate({\n        ...user,\n        paymentSettings\n      });\n    } catch (err) {\n      setError('Failed to save payment settings. Please try again.');\n      console.error('Save payment settings error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Payment Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"success\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n        type: \"switch\",\n        id: \"accepts-payments\",\n        label: \"Accept payments for requests\",\n        name: \"acceptsPayments\",\n        checked: paymentSettings.acceptsPayments,\n        onChange: handleChange,\n        className: \"mb-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Preferred Currency\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          name: \"preferredCurrency\",\n          value: paymentSettings.preferredCurrency,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"USD\",\n            children: \"USD ($)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"EUR\",\n            children: \"EUR (\\u20AC)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"GBP\",\n            children: \"GBP (\\xA3)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"CAD\",\n            children: \"CAD ($)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"AUD\",\n            children: \"AUD ($)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n        activeKey: activeTab,\n        onSelect: k => setActiveTab(k),\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          eventKey: \"stripe\",\n          title: \"Stripe\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Connect your Stripe account to receive payments directly to your bank account.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), paymentSettings.stripeAccountId ? /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"success\",\n            children: [\"Your Stripe account is connected! ID: \", paymentSettings.stripeAccountId.substring(0, 8), \"...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: connectStripe,\n            disabled: loading,\n            children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Spinner, {\n                animation: \"border\",\n                size: \"sm\",\n                className: \"me-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 21\n              }, this), \"Connecting...\"]\n            }, void 0, true) : 'Connect with Stripe'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          eventKey: \"paypal\",\n          title: \"PayPal\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Enter your PayPal email to receive payments to your PayPal account.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"PayPal Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              name: \"paypalEmail\",\n              value: paymentSettings.paypalEmail,\n              onChange: handleChange,\n              placeholder: \"your-email@example.com\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        onClick: savePaymentSettings,\n        disabled: loading,\n        className: \"mt-3\",\n        children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Spinner, {\n            animation: \"border\",\n            size: \"sm\",\n            className: \"me-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this), \"Saving...\"]\n        }, void 0, true) : 'Save Payment Settings'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentSettings, \"/aaV17Ye3xfgJj+273DatFN2LLs=\");\n_c = PaymentSettings;\nexport default PaymentSettings;\nvar _c;\n$RefreshReg$(_c, \"PaymentSettings\");","map":{"version":3,"names":["React","useState","useEffect","Button","Form","Alert","Card","Tabs","Tab","Spinner","api","jsxDEV","_jsxDEV","Fragment","_Fragment","PaymentSettings","user","onUpdate","_s","_user$paymentSettings","_user$paymentSettings2","_user$paymentSettings3","_user$paymentSettings4","activeTab","setActiveTab","loading","setLoading","error","setError","success","setSuccess","paymentSettings","setPaymentSettings","acceptsPayments","stripeAccountId","paypalEmail","preferredCurrency","urlParams","URLSearchParams","window","location","search","stripeSuccess","get","fetchUserData","_response$data","_response$data$paymen","_response$data2","_response$data2$payme","_response$data3","_response$data3$payme","_response$data4","_response$data4$payme","token","localStorage","getItem","response","headers","Authorization","data","err","console","handleChange","e","name","value","type","checked","target","connectStripe","log","post","url","Error","href","errorMessage","message","savePaymentSettings","put","className","children","Header","fileName","_jsxFileName","lineNumber","columnNumber","Body","variant","Check","id","label","onChange","Group","Label","Select","activeKey","onSelect","k","eventKey","title","substring","onClick","disabled","animation","size","Control","placeholder","_c","$RefreshReg$"],"sources":["/Users/davidmcguire/Desktop/Master/Cursor/AudioZoom/client/src/components/PaymentSettings.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Form, Alert, Card, Tabs, Tab, Spinner } from 'react-bootstrap';\nimport api from '../utils/api';\n\nconst PaymentSettings = ({ user, onUpdate }) => {\n  const [activeTab, setActiveTab] = useState('stripe');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [paymentSettings, setPaymentSettings] = useState({\n    acceptsPayments: user?.paymentSettings?.acceptsPayments || false,\n    stripeAccountId: user?.paymentSettings?.stripeAccountId || '',\n    paypalEmail: user?.paymentSettings?.paypalEmail || '',\n    preferredCurrency: user?.paymentSettings?.preferredCurrency || 'USD'\n  });\n\n  // Check URL parameters for Stripe success\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const stripeSuccess = urlParams.get('stripe');\n    \n    if (stripeSuccess === 'success') {\n      setSuccess('Your Stripe account has been connected successfully!');\n      // Refresh user data to get updated Stripe account ID\n      if (onUpdate) {\n        fetchUserData();\n      }\n    }\n  }, []);\n\n  const fetchUserData = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) return;\n      \n      const response = await api.get('/api/users/me', {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      \n      if (onUpdate) {\n        onUpdate(response.data);\n      }\n      \n      setPaymentSettings({\n        acceptsPayments: response.data?.paymentSettings?.acceptsPayments || false,\n        stripeAccountId: response.data?.paymentSettings?.stripeAccountId || '',\n        paypalEmail: response.data?.paymentSettings?.paypalEmail || '',\n        preferredCurrency: response.data?.paymentSettings?.preferredCurrency || 'USD'\n      });\n    } catch (err) {\n      console.error('Error fetching user data:', err);\n    }\n  };\n\n  const handleChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    setPaymentSettings({\n      ...paymentSettings,\n      [name]: type === 'checkbox' ? checked : value\n    });\n  };\n\n  const connectStripe = async () => {\n    try {\n      setLoading(true);\n      setError('');\n      \n      const token = localStorage.getItem('token');\n      if (!token) {\n        setError('You must be logged in to connect with Stripe.');\n        setLoading(false);\n        return;\n      }\n      \n      console.log('Connecting to Stripe...');\n      const response = await api.post(\n        '/api/payments/create-stripe-account-link',\n        {},\n        {\n          headers: { Authorization: `Bearer ${token}` }\n        }\n      );\n      \n      console.log('Stripe response:', response.data);\n      const { url } = response.data;\n      \n      if (!url) {\n        throw new Error('No redirect URL received from server');\n      }\n      \n      // Redirect to Stripe Connect onboarding\n      window.location.href = url;\n    } catch (err) {\n      console.error('Stripe connect error:', err);\n      let errorMessage = 'Failed to connect with Stripe. Please try again.';\n      \n      if (err.response) {\n        console.error('Error response:', err.response.data);\n        errorMessage = err.response.data.message || errorMessage;\n        if (err.response.data.error) {\n          errorMessage += ` (${err.response.data.error})`;\n        }\n      }\n      \n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const savePaymentSettings = async () => {\n    try {\n      setLoading(true);\n      setError('');\n      setSuccess('');\n      \n      const token = localStorage.getItem('token');\n      await api.put(\n        '/api/users/payment-settings',\n        paymentSettings,\n        {\n          headers: { Authorization: `Bearer ${token}` }\n        }\n      );\n      \n      setSuccess('Payment settings saved successfully!');\n      if (onUpdate) onUpdate({ ...user, paymentSettings });\n    } catch (err) {\n      setError('Failed to save payment settings. Please try again.');\n      console.error('Save payment settings error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Card className=\"mb-4\">\n      <Card.Header>\n        <h5>Payment Settings</h5>\n      </Card.Header>\n      <Card.Body>\n        {error && <Alert variant=\"danger\">{error}</Alert>}\n        {success && <Alert variant=\"success\">{success}</Alert>}\n        \n        <Form.Check\n          type=\"switch\"\n          id=\"accepts-payments\"\n          label=\"Accept payments for requests\"\n          name=\"acceptsPayments\"\n          checked={paymentSettings.acceptsPayments}\n          onChange={handleChange}\n          className=\"mb-3\"\n        />\n        \n        <Form.Group className=\"mb-3\">\n          <Form.Label>Preferred Currency</Form.Label>\n          <Form.Select\n            name=\"preferredCurrency\"\n            value={paymentSettings.preferredCurrency}\n            onChange={handleChange}\n          >\n            <option value=\"USD\">USD ($)</option>\n            <option value=\"EUR\">EUR (€)</option>\n            <option value=\"GBP\">GBP (£)</option>\n            <option value=\"CAD\">CAD ($)</option>\n            <option value=\"AUD\">AUD ($)</option>\n          </Form.Select>\n        </Form.Group>\n        \n        <Tabs\n          activeKey={activeTab}\n          onSelect={(k) => setActiveTab(k)}\n          className=\"mb-3\"\n        >\n          <Tab eventKey=\"stripe\" title=\"Stripe\">\n            <p>Connect your Stripe account to receive payments directly to your bank account.</p>\n            {paymentSettings.stripeAccountId ? (\n              <Alert variant=\"success\">\n                Your Stripe account is connected! ID: {paymentSettings.stripeAccountId.substring(0, 8)}...\n              </Alert>\n            ) : (\n              <Button \n                variant=\"primary\" \n                onClick={connectStripe}\n                disabled={loading}\n              >\n                {loading ? (\n                  <>\n                    <Spinner animation=\"border\" size=\"sm\" className=\"me-2\" />\n                    Connecting...\n                  </>\n                ) : (\n                  'Connect with Stripe'\n                )}\n              </Button>\n            )}\n          </Tab>\n          \n          <Tab eventKey=\"paypal\" title=\"PayPal\">\n            <p>Enter your PayPal email to receive payments to your PayPal account.</p>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>PayPal Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                name=\"paypalEmail\"\n                value={paymentSettings.paypalEmail}\n                onChange={handleChange}\n                placeholder=\"your-email@example.com\"\n              />\n            </Form.Group>\n          </Tab>\n        </Tabs>\n        \n        <Button \n          variant=\"success\" \n          onClick={savePaymentSettings}\n          disabled={loading}\n          className=\"mt-3\"\n        >\n          {loading ? (\n            <>\n              <Spinner animation=\"border\" size=\"sm\" className=\"me-2\" />\n              Saving...\n            </>\n          ) : (\n            'Save Payment Settings'\n          )}\n        </Button>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default PaymentSettings; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}