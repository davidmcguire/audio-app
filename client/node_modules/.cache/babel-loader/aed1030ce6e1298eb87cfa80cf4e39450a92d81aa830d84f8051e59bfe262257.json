{"ast":null,"code":"import React,{useState}from'react';import styled from'styled-components';import Button from'./Button';import api from'../utils/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const FormContainer=styled.div`\n  margin-bottom: 2rem;\n`;const StyledForm=styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;const TextArea=styled.textarea`\n  width: 100%;\n  padding: 0.75rem;\n  border: 1px solid ${props=>props.theme.colors.border};\n  border-radius: ${props=>props.theme.borderRadius.small};\n  font-family: ${props=>props.theme.fonts.body};\n  font-size: 1rem;\n  min-height: 100px;\n  resize: vertical;\n  \n  &:focus {\n    outline: none;\n    border-color: ${props=>props.theme.colors.primary};\n    box-shadow: 0 0 0 2px rgba(138, 43, 226, 0.2);\n  }\n`;const ErrorMessage=styled.div`\n  color: ${props=>props.theme.colors.error};\n  background-color: rgba(255, 59, 48, 0.1);\n  border: 1px solid rgba(255, 59, 48, 0.2);\n  border-radius: ${props=>props.theme.borderRadius.small};\n  padding: 0.75rem 1rem;\n  margin-bottom: 1rem;\n  font-size: 0.9rem;\n`;const SuccessMessage=styled.div`\n  color: ${props=>props.theme.colors.success};\n  background-color: rgba(52, 199, 89, 0.1);\n  border: 1px solid rgba(52, 199, 89, 0.2);\n  border-radius: ${props=>props.theme.borderRadius.small};\n  padding: 0.75rem 1rem;\n  margin-bottom: 1rem;\n  font-size: 0.9rem;\n`;const MessageForm=_ref=>{let{recipientId,onMessageSent}=_ref;const[message,setMessage]=useState('');const[loading,setLoading]=useState(false);const[error,setError]=useState('');const[success,setSuccess]=useState('');const handleSubmit=async e=>{e.preventDefault();if(!message.trim()){setError('Please enter a message');return;}try{setLoading(true);setError('');const response=await api.post('/api/messages',{recipientId,content:message,type:'GENERAL'});setSuccess('Message sent successfully!');setMessage('');if(onMessageSent){onMessageSent(response.data);}// Clear success message after 3 seconds\nsetTimeout(()=>{setSuccess('');},3000);}catch(err){console.error('Error sending message:',err);if(err.response){setError(err.response.data.message||'Failed to send message. Please try again.');}else if(err.request){setError('Network error - could not connect to server. Please try again.');}else{setError(err.message||'Failed to send message. Please try again.');}}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Send Message\"}),error&&/*#__PURE__*/_jsx(ErrorMessage,{children:error}),success&&/*#__PURE__*/_jsx(SuccessMessage,{children:success}),/*#__PURE__*/_jsxs(StyledForm,{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(TextArea,{value:message,onChange:e=>setMessage(e.target.value),placeholder:\"Type your message here...\",required:true,disabled:loading}),/*#__PURE__*/_jsx(Button,{type:\"submit\",$variant:\"primary\",disabled:loading,children:loading?'Sending...':'Send Message'})]})]});};export default MessageForm;","map":{"version":3,"names":["React","useState","styled","Button","api","jsx","_jsx","jsxs","_jsxs","FormContainer","div","StyledForm","form","TextArea","textarea","props","theme","colors","border","borderRadius","small","fonts","body","primary","ErrorMessage","error","SuccessMessage","success","MessageForm","_ref","recipientId","onMessageSent","message","setMessage","loading","setLoading","setError","setSuccess","handleSubmit","e","preventDefault","trim","response","post","content","type","data","setTimeout","err","console","request","children","onSubmit","value","onChange","target","placeholder","required","disabled","$variant"],"sources":["/Users/davidmcguire/Desktop/Master/Cursor/AudioZoom/client/src/components/MessageForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Button from './Button';\nimport api from '../utils/api';\n\nconst FormContainer = styled.div`\n  margin-bottom: 2rem;\n`;\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n\nconst TextArea = styled.textarea`\n  width: 100%;\n  padding: 0.75rem;\n  border: 1px solid ${props => props.theme.colors.border};\n  border-radius: ${props => props.theme.borderRadius.small};\n  font-family: ${props => props.theme.fonts.body};\n  font-size: 1rem;\n  min-height: 100px;\n  resize: vertical;\n  \n  &:focus {\n    outline: none;\n    border-color: ${props => props.theme.colors.primary};\n    box-shadow: 0 0 0 2px rgba(138, 43, 226, 0.2);\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  color: ${props => props.theme.colors.error};\n  background-color: rgba(255, 59, 48, 0.1);\n  border: 1px solid rgba(255, 59, 48, 0.2);\n  border-radius: ${props => props.theme.borderRadius.small};\n  padding: 0.75rem 1rem;\n  margin-bottom: 1rem;\n  font-size: 0.9rem;\n`;\n\nconst SuccessMessage = styled.div`\n  color: ${props => props.theme.colors.success};\n  background-color: rgba(52, 199, 89, 0.1);\n  border: 1px solid rgba(52, 199, 89, 0.2);\n  border-radius: ${props => props.theme.borderRadius.small};\n  padding: 0.75rem 1rem;\n  margin-bottom: 1rem;\n  font-size: 0.9rem;\n`;\n\nconst MessageForm = ({ recipientId, onMessageSent }) => {\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!message.trim()) {\n      setError('Please enter a message');\n      return;\n    }\n    \n    try {\n      setLoading(true);\n      setError('');\n      \n      const response = await api.post('/api/messages', {\n        recipientId,\n        content: message,\n        type: 'GENERAL'\n      });\n      \n      setSuccess('Message sent successfully!');\n      setMessage('');\n      \n      if (onMessageSent) {\n        onMessageSent(response.data);\n      }\n      \n      // Clear success message after 3 seconds\n      setTimeout(() => {\n        setSuccess('');\n      }, 3000);\n      \n    } catch (err) {\n      console.error('Error sending message:', err);\n      if (err.response) {\n        setError(err.response.data.message || 'Failed to send message. Please try again.');\n      } else if (err.request) {\n        setError('Network error - could not connect to server. Please try again.');\n      } else {\n        setError(err.message || 'Failed to send message. Please try again.');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <FormContainer>\n      <h3>Send Message</h3>\n      \n      {error && <ErrorMessage>{error}</ErrorMessage>}\n      {success && <SuccessMessage>{success}</SuccessMessage>}\n      \n      <StyledForm onSubmit={handleSubmit}>\n        <TextArea\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n          placeholder=\"Type your message here...\"\n          required\n          disabled={loading}\n        />\n        \n        <Button \n          type=\"submit\" \n          $variant=\"primary\"\n          disabled={loading}\n        >\n          {loading ? 'Sending...' : 'Send Message'}\n        </Button>\n      </StyledForm>\n    </FormContainer>\n  );\n};\n\nexport default MessageForm; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}