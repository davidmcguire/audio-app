{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Button,Form,Alert,Card,Tabs,Tab,Spinner}from'react-bootstrap';import api from'../utils/api';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const PaymentSettings=_ref=>{var _user$paymentSettings,_user$paymentSettings2,_user$paymentSettings3,_user$paymentSettings4;let{user,onUpdate}=_ref;const[activeTab,setActiveTab]=useState('stripe');const[loading,setLoading]=useState(false);const[error,setError]=useState('');const[success,setSuccess]=useState('');const[paymentSettings,setPaymentSettings]=useState({acceptsPayments:(user===null||user===void 0?void 0:(_user$paymentSettings=user.paymentSettings)===null||_user$paymentSettings===void 0?void 0:_user$paymentSettings.acceptsPayments)||false,stripeAccountId:(user===null||user===void 0?void 0:(_user$paymentSettings2=user.paymentSettings)===null||_user$paymentSettings2===void 0?void 0:_user$paymentSettings2.stripeAccountId)||'',paypalEmail:(user===null||user===void 0?void 0:(_user$paymentSettings3=user.paymentSettings)===null||_user$paymentSettings3===void 0?void 0:_user$paymentSettings3.paypalEmail)||'',preferredCurrency:(user===null||user===void 0?void 0:(_user$paymentSettings4=user.paymentSettings)===null||_user$paymentSettings4===void 0?void 0:_user$paymentSettings4.preferredCurrency)||'USD'});// Check URL parameters for Stripe success\nuseEffect(()=>{const urlParams=new URLSearchParams(window.location.search);const stripeSuccess=urlParams.get('stripe');if(stripeSuccess==='success'){setSuccess('Your Stripe account has been connected successfully!');// Refresh user data to get updated Stripe account ID\nif(onUpdate){fetchUserData();}}},[]);const fetchUserData=async()=>{try{var _response$data,_response$data$paymen,_response$data2,_response$data2$payme,_response$data3,_response$data3$payme,_response$data4,_response$data4$payme;const token=localStorage.getItem('token');if(!token)return;const response=await api.get('/api/users/me',{headers:{Authorization:`Bearer ${token}`}});if(onUpdate){onUpdate(response.data);}setPaymentSettings({acceptsPayments:((_response$data=response.data)===null||_response$data===void 0?void 0:(_response$data$paymen=_response$data.paymentSettings)===null||_response$data$paymen===void 0?void 0:_response$data$paymen.acceptsPayments)||false,stripeAccountId:((_response$data2=response.data)===null||_response$data2===void 0?void 0:(_response$data2$payme=_response$data2.paymentSettings)===null||_response$data2$payme===void 0?void 0:_response$data2$payme.stripeAccountId)||'',paypalEmail:((_response$data3=response.data)===null||_response$data3===void 0?void 0:(_response$data3$payme=_response$data3.paymentSettings)===null||_response$data3$payme===void 0?void 0:_response$data3$payme.paypalEmail)||'',preferredCurrency:((_response$data4=response.data)===null||_response$data4===void 0?void 0:(_response$data4$payme=_response$data4.paymentSettings)===null||_response$data4$payme===void 0?void 0:_response$data4$payme.preferredCurrency)||'USD'});}catch(err){console.error('Error fetching user data:',err);}};const handleChange=e=>{const{name,value,type,checked}=e.target;setPaymentSettings({...paymentSettings,[name]:type==='checkbox'?checked:value});};const connectStripe=async()=>{try{setLoading(true);setError('');const token=localStorage.getItem('token');if(!token){setError('You must be logged in to connect with Stripe.');setLoading(false);return;}console.log('Connecting to Stripe...');const response=await api.post('/api/payments/create-stripe-account-link',{},{headers:{Authorization:`Bearer ${token}`}});console.log('Stripe response:',response.data);const{url}=response.data;if(!url){throw new Error('No redirect URL received from server');}// Redirect to Stripe Connect onboarding\nwindow.location.href=url;}catch(err){console.error('Stripe connect error:',err);let errorMessage='Failed to connect with Stripe. Please try again.';if(err.response){console.error('Error response:',err.response.data);errorMessage=err.response.data.message||errorMessage;if(err.response.data.error){errorMessage+=` (${err.response.data.error})`;}}setError(errorMessage);}finally{setLoading(false);}};const savePaymentSettings=async()=>{try{setLoading(true);setError('');setSuccess('');const token=localStorage.getItem('token');await api.put('/api/users/payment-settings',paymentSettings,{headers:{Authorization:`Bearer ${token}`}});setSuccess('Payment settings saved successfully!');if(onUpdate)onUpdate({...user,paymentSettings});}catch(err){setError('Failed to save payment settings. Please try again.');console.error('Save payment settings error:',err);}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(Card,{className:\"mb-4\",children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsx(\"h5\",{children:\"Payment Settings\"})}),/*#__PURE__*/_jsxs(Card.Body,{children:[error&&/*#__PURE__*/_jsx(Alert,{variant:\"danger\",children:error}),success&&/*#__PURE__*/_jsx(Alert,{variant:\"success\",children:success}),/*#__PURE__*/_jsx(Form.Check,{type:\"switch\",id:\"accepts-payments\",label:\"Accept payments for requests\",name:\"acceptsPayments\",checked:paymentSettings.acceptsPayments,onChange:handleChange,className:\"mb-3\"}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Preferred Currency\"}),/*#__PURE__*/_jsxs(Form.Select,{name:\"preferredCurrency\",value:paymentSettings.preferredCurrency,onChange:handleChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"USD\",children:\"USD ($)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"EUR\",children:\"EUR (\\u20AC)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"GBP\",children:\"GBP (\\xA3)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"CAD\",children:\"CAD ($)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"AUD\",children:\"AUD ($)\"})]})]}),/*#__PURE__*/_jsxs(Tabs,{activeKey:activeTab,onSelect:k=>setActiveTab(k),className:\"mb-3\",children:[/*#__PURE__*/_jsxs(Tab,{eventKey:\"stripe\",title:\"Stripe\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Connect your Stripe account to receive payments directly to your bank account.\"}),paymentSettings.stripeAccountId?/*#__PURE__*/_jsxs(Alert,{variant:\"success\",children:[\"Your Stripe account is connected! ID: \",paymentSettings.stripeAccountId.substring(0,8),\"...\"]}):/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:connectStripe,disabled:loading,children:loading?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Spinner,{animation:\"border\",size:\"sm\",className:\"me-2\"}),\"Connecting...\"]}):'Connect with Stripe'})]}),/*#__PURE__*/_jsxs(Tab,{eventKey:\"paypal\",title:\"PayPal\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Enter your PayPal email to receive payments to your PayPal account.\"}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"PayPal Email\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"email\",name:\"paypalEmail\",value:paymentSettings.paypalEmail,onChange:handleChange,placeholder:\"your-email@example.com\"})]})]})]}),/*#__PURE__*/_jsx(Button,{variant:\"success\",onClick:savePaymentSettings,disabled:loading,className:\"mt-3\",children:loading?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Spinner,{animation:\"border\",size:\"sm\",className:\"me-2\"}),\"Saving...\"]}):'Save Payment Settings'})]})]});};export default PaymentSettings;","map":{"version":3,"names":["React","useState","useEffect","Button","Form","Alert","Card","Tabs","Tab","Spinner","api","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PaymentSettings","_ref","_user$paymentSettings","_user$paymentSettings2","_user$paymentSettings3","_user$paymentSettings4","user","onUpdate","activeTab","setActiveTab","loading","setLoading","error","setError","success","setSuccess","paymentSettings","setPaymentSettings","acceptsPayments","stripeAccountId","paypalEmail","preferredCurrency","urlParams","URLSearchParams","window","location","search","stripeSuccess","get","fetchUserData","_response$data","_response$data$paymen","_response$data2","_response$data2$payme","_response$data3","_response$data3$payme","_response$data4","_response$data4$payme","token","localStorage","getItem","response","headers","Authorization","data","err","console","handleChange","e","name","value","type","checked","target","connectStripe","log","post","url","Error","href","errorMessage","message","savePaymentSettings","put","className","children","Header","Body","variant","Check","id","label","onChange","Group","Label","Select","activeKey","onSelect","k","eventKey","title","substring","onClick","disabled","animation","size","Control","placeholder"],"sources":["/Users/davidmcguire/Desktop/Master/Cursor/AudioZoom/client/src/components/PaymentSettings.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Form, Alert, Card, Tabs, Tab, Spinner } from 'react-bootstrap';\nimport api from '../utils/api';\n\nconst PaymentSettings = ({ user, onUpdate }) => {\n  const [activeTab, setActiveTab] = useState('stripe');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [paymentSettings, setPaymentSettings] = useState({\n    acceptsPayments: user?.paymentSettings?.acceptsPayments || false,\n    stripeAccountId: user?.paymentSettings?.stripeAccountId || '',\n    paypalEmail: user?.paymentSettings?.paypalEmail || '',\n    preferredCurrency: user?.paymentSettings?.preferredCurrency || 'USD'\n  });\n\n  // Check URL parameters for Stripe success\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const stripeSuccess = urlParams.get('stripe');\n    \n    if (stripeSuccess === 'success') {\n      setSuccess('Your Stripe account has been connected successfully!');\n      // Refresh user data to get updated Stripe account ID\n      if (onUpdate) {\n        fetchUserData();\n      }\n    }\n  }, []);\n\n  const fetchUserData = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) return;\n      \n      const response = await api.get('/api/users/me', {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      \n      if (onUpdate) {\n        onUpdate(response.data);\n      }\n      \n      setPaymentSettings({\n        acceptsPayments: response.data?.paymentSettings?.acceptsPayments || false,\n        stripeAccountId: response.data?.paymentSettings?.stripeAccountId || '',\n        paypalEmail: response.data?.paymentSettings?.paypalEmail || '',\n        preferredCurrency: response.data?.paymentSettings?.preferredCurrency || 'USD'\n      });\n    } catch (err) {\n      console.error('Error fetching user data:', err);\n    }\n  };\n\n  const handleChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    setPaymentSettings({\n      ...paymentSettings,\n      [name]: type === 'checkbox' ? checked : value\n    });\n  };\n\n  const connectStripe = async () => {\n    try {\n      setLoading(true);\n      setError('');\n      \n      const token = localStorage.getItem('token');\n      if (!token) {\n        setError('You must be logged in to connect with Stripe.');\n        setLoading(false);\n        return;\n      }\n      \n      console.log('Connecting to Stripe...');\n      const response = await api.post(\n        '/api/payments/create-stripe-account-link',\n        {},\n        {\n          headers: { Authorization: `Bearer ${token}` }\n        }\n      );\n      \n      console.log('Stripe response:', response.data);\n      const { url } = response.data;\n      \n      if (!url) {\n        throw new Error('No redirect URL received from server');\n      }\n      \n      // Redirect to Stripe Connect onboarding\n      window.location.href = url;\n    } catch (err) {\n      console.error('Stripe connect error:', err);\n      let errorMessage = 'Failed to connect with Stripe. Please try again.';\n      \n      if (err.response) {\n        console.error('Error response:', err.response.data);\n        errorMessage = err.response.data.message || errorMessage;\n        if (err.response.data.error) {\n          errorMessage += ` (${err.response.data.error})`;\n        }\n      }\n      \n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const savePaymentSettings = async () => {\n    try {\n      setLoading(true);\n      setError('');\n      setSuccess('');\n      \n      const token = localStorage.getItem('token');\n      await api.put(\n        '/api/users/payment-settings',\n        paymentSettings,\n        {\n          headers: { Authorization: `Bearer ${token}` }\n        }\n      );\n      \n      setSuccess('Payment settings saved successfully!');\n      if (onUpdate) onUpdate({ ...user, paymentSettings });\n    } catch (err) {\n      setError('Failed to save payment settings. Please try again.');\n      console.error('Save payment settings error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Card className=\"mb-4\">\n      <Card.Header>\n        <h5>Payment Settings</h5>\n      </Card.Header>\n      <Card.Body>\n        {error && <Alert variant=\"danger\">{error}</Alert>}\n        {success && <Alert variant=\"success\">{success}</Alert>}\n        \n        <Form.Check\n          type=\"switch\"\n          id=\"accepts-payments\"\n          label=\"Accept payments for requests\"\n          name=\"acceptsPayments\"\n          checked={paymentSettings.acceptsPayments}\n          onChange={handleChange}\n          className=\"mb-3\"\n        />\n        \n        <Form.Group className=\"mb-3\">\n          <Form.Label>Preferred Currency</Form.Label>\n          <Form.Select\n            name=\"preferredCurrency\"\n            value={paymentSettings.preferredCurrency}\n            onChange={handleChange}\n          >\n            <option value=\"USD\">USD ($)</option>\n            <option value=\"EUR\">EUR (€)</option>\n            <option value=\"GBP\">GBP (£)</option>\n            <option value=\"CAD\">CAD ($)</option>\n            <option value=\"AUD\">AUD ($)</option>\n          </Form.Select>\n        </Form.Group>\n        \n        <Tabs\n          activeKey={activeTab}\n          onSelect={(k) => setActiveTab(k)}\n          className=\"mb-3\"\n        >\n          <Tab eventKey=\"stripe\" title=\"Stripe\">\n            <p>Connect your Stripe account to receive payments directly to your bank account.</p>\n            {paymentSettings.stripeAccountId ? (\n              <Alert variant=\"success\">\n                Your Stripe account is connected! ID: {paymentSettings.stripeAccountId.substring(0, 8)}...\n              </Alert>\n            ) : (\n              <Button \n                variant=\"primary\" \n                onClick={connectStripe}\n                disabled={loading}\n              >\n                {loading ? (\n                  <>\n                    <Spinner animation=\"border\" size=\"sm\" className=\"me-2\" />\n                    Connecting...\n                  </>\n                ) : (\n                  'Connect with Stripe'\n                )}\n              </Button>\n            )}\n          </Tab>\n          \n          <Tab eventKey=\"paypal\" title=\"PayPal\">\n            <p>Enter your PayPal email to receive payments to your PayPal account.</p>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>PayPal Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                name=\"paypalEmail\"\n                value={paymentSettings.paypalEmail}\n                onChange={handleChange}\n                placeholder=\"your-email@example.com\"\n              />\n            </Form.Group>\n          </Tab>\n        </Tabs>\n        \n        <Button \n          variant=\"success\" \n          onClick={savePaymentSettings}\n          disabled={loading}\n          className=\"mt-3\"\n        >\n          {loading ? (\n            <>\n              <Spinner animation=\"border\" size=\"sm\" className=\"me-2\" />\n              Saving...\n            </>\n          ) : (\n            'Save Payment Settings'\n          )}\n        </Button>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default PaymentSettings; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}