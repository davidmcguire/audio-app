{"ast":null,"code":"var _jsxFileName = \"/Users/davidmcguire/Desktop/Master/Cursor/AudioZoom/client/src/components/AudioRecorder.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './AudioRecorder.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioRecorder = ({\n  onRecordingComplete\n}) => {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [recordingTime, setRecordingTime] = useState(0);\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const timerRef = useRef(null);\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      const mediaRecorder = new MediaRecorder(stream);\n      mediaRecorderRef.current = mediaRecorder;\n      audioChunksRef.current = [];\n      mediaRecorder.ondataavailable = event => {\n        if (event.data.size > 0) {\n          audioChunksRef.current.push(event.data);\n        }\n      };\n      mediaRecorder.onstop = () => {\n        const audioBlob = new Blob(audioChunksRef.current, {\n          type: 'audio/wav'\n        });\n        onRecordingComplete(audioBlob);\n        stream.getTracks().forEach(track => track.stop());\n      };\n      mediaRecorder.start();\n      setIsRecording(true);\n\n      // Start timer\n      timerRef.current = setInterval(() => {\n        setRecordingTime(prev => prev + 1);\n      }, 1000);\n    } catch (error) {\n      console.error('Error accessing microphone:', error);\n      alert('Error accessing microphone. Please ensure you have granted microphone permissions.');\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n      clearInterval(timerRef.current);\n      setRecordingTime(0);\n    }\n  };\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-recorder\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: `record-button ${isRecording ? 'recording' : ''}`,\n      onClick: isRecording ? stopRecording : startRecording,\n      children: isRecording ? 'Stop Recording' : 'Start Recording'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recording-time\",\n      children: [\"Recording: \", formatTime(recordingTime)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioRecorder, \"xylg2PWChRG0Me/0dxsU+487W1o=\");\n_c = AudioRecorder;\nexport default AudioRecorder;\nvar _c;\n$RefreshReg$(_c, \"AudioRecorder\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","AudioRecorder","onRecordingComplete","_s","isRecording","setIsRecording","recordingTime","setRecordingTime","mediaRecorderRef","audioChunksRef","timerRef","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","mediaRecorder","MediaRecorder","current","ondataavailable","event","data","size","push","onstop","audioBlob","Blob","type","getTracks","forEach","track","stop","start","setInterval","prev","error","console","alert","stopRecording","clearInterval","formatTime","seconds","minutes","Math","floor","remainingSeconds","toString","padStart","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/davidmcguire/Desktop/Master/Cursor/AudioZoom/client/src/components/AudioRecorder.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport './AudioRecorder.css';\n\nconst AudioRecorder = ({ onRecordingComplete }) => {\n  const [isRecording, setIsRecording] = useState(false);\n  const [recordingTime, setRecordingTime] = useState(0);\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const timerRef = useRef(null);\n\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      const mediaRecorder = new MediaRecorder(stream);\n      mediaRecorderRef.current = mediaRecorder;\n      audioChunksRef.current = [];\n\n      mediaRecorder.ondataavailable = (event) => {\n        if (event.data.size > 0) {\n          audioChunksRef.current.push(event.data);\n        }\n      };\n\n      mediaRecorder.onstop = () => {\n        const audioBlob = new Blob(audioChunksRef.current, { type: 'audio/wav' });\n        onRecordingComplete(audioBlob);\n        stream.getTracks().forEach(track => track.stop());\n      };\n\n      mediaRecorder.start();\n      setIsRecording(true);\n      \n      // Start timer\n      timerRef.current = setInterval(() => {\n        setRecordingTime(prev => prev + 1);\n      }, 1000);\n    } catch (error) {\n      console.error('Error accessing microphone:', error);\n      alert('Error accessing microphone. Please ensure you have granted microphone permissions.');\n    }\n  };\n\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n      clearInterval(timerRef.current);\n      setRecordingTime(0);\n    }\n  };\n\n  const formatTime = (seconds) => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n\n  return (\n    <div className=\"audio-recorder\">\n      <button \n        className={`record-button ${isRecording ? 'recording' : ''}`}\n        onClick={isRecording ? stopRecording : startRecording}\n      >\n        {isRecording ? 'Stop Recording' : 'Start Recording'}\n      </button>\n      {isRecording && (\n        <div className=\"recording-time\">\n          Recording: {formatTime(recordingTime)}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AudioRecorder; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}