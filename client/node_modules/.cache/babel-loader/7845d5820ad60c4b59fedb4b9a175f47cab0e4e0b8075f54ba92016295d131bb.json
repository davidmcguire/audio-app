{"ast":null,"code":"var _jsxFileName = \"/Users/davidmcguire/Desktop/Master/Cursor/AudioZoom/client/src/components/Navbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Badge } from 'react-bootstrap';\nimport api from '../utils/api';\nimport SearchUsers from './SearchUsers';\nimport Logo from './Logo';\nimport './Navbar.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  const navigate = useNavigate();\n  const token = localStorage.getItem('token');\n  const [unreadRequests, setUnreadRequests] = useState(0);\n  const [unreadMessages, setUnreadMessages] = useState(0);\n  useEffect(() => {\n    if (token) {\n      fetchUnreadRequests();\n      fetchUnreadMessages();\n\n      // Set up polling to check for new messages every minute\n      const intervalId = setInterval(() => {\n        fetchUnreadMessages();\n        fetchUnreadRequests();\n      }, 60000); // 60 seconds\n\n      return () => clearInterval(intervalId);\n    }\n  }, [token]);\n  const fetchUnreadRequests = async () => {\n    try {\n      const response = await api.get('/api/audio-requests/my-orders');\n\n      // Get viewed requests from localStorage\n      const storedViewedRequests = localStorage.getItem('viewedRequests');\n      const viewedRequests = storedViewedRequests ? new Set(JSON.parse(storedViewedRequests)) : new Set();\n\n      // Count unread pending requests\n      const unreadCount = response.data.filter(req => !viewedRequests.has(req._id) && req.status === 'pending').length;\n      setUnreadRequests(unreadCount);\n    } catch (err) {\n      console.error('Error fetching unread requests:', err);\n    }\n  };\n  const fetchUnreadMessages = async () => {\n    try {\n      const response = await api.get('/api/messages/unread');\n      setUnreadMessages(response.data.count);\n    } catch (err) {\n      console.error('Error fetching unread messages:', err);\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userId');\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-left\",\n      children: /*#__PURE__*/_jsxDEV(Logo, {\n        className: \"navbar-brand\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), token && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-search\",\n      children: /*#__PURE__*/_jsxDEV(SearchUsers, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-links\",\n      children: [!token && /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), token && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/upload\",\n          children: \"Send Audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/audio-history\",\n          children: \"My Audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/inbox\",\n          className: \"inbox-link\",\n          children: [\"Messages\", unreadMessages > 0 && /*#__PURE__*/_jsxDEV(Badge, {\n            pill: true,\n            bg: \"danger\",\n            className: \"unread-badge\",\n            children: unreadMessages\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/requests\",\n          className: \"requests-link\",\n          children: [\"Requests\", unreadRequests > 0 && /*#__PURE__*/_jsxDEV(Badge, {\n            pill: true,\n            bg: \"danger\",\n            className: \"unread-badge\",\n            children: unreadRequests\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/profile\",\n          children: \"My Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \"logout-button\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"nED3ndbY9v/trtKOOnB2L0Naz0k=\", false, function () {\n  return [useNavigate];\n});\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","Badge","api","SearchUsers","Logo","jsxDEV","_jsxDEV","Fragment","_Fragment","Navbar","_s","navigate","token","localStorage","getItem","unreadRequests","setUnreadRequests","unreadMessages","setUnreadMessages","fetchUnreadRequests","fetchUnreadMessages","intervalId","setInterval","clearInterval","response","get","storedViewedRequests","viewedRequests","Set","JSON","parse","unreadCount","data","filter","req","has","_id","status","length","err","console","error","count","handleLogout","removeItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","pill","bg","onClick","_c","$RefreshReg$"],"sources":["/Users/davidmcguire/Desktop/Master/Cursor/AudioZoom/client/src/components/Navbar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Badge } from 'react-bootstrap';\nimport api from '../utils/api';\nimport SearchUsers from './SearchUsers';\nimport Logo from './Logo';\nimport './Navbar.css';\n\nconst Navbar = () => {\n  const navigate = useNavigate();\n  const token = localStorage.getItem('token');\n  const [unreadRequests, setUnreadRequests] = useState(0);\n  const [unreadMessages, setUnreadMessages] = useState(0);\n\n  useEffect(() => {\n    if (token) {\n      fetchUnreadRequests();\n      fetchUnreadMessages();\n\n      // Set up polling to check for new messages every minute\n      const intervalId = setInterval(() => {\n        fetchUnreadMessages();\n        fetchUnreadRequests();\n      }, 60000); // 60 seconds\n\n      return () => clearInterval(intervalId);\n    }\n  }, [token]);\n\n  const fetchUnreadRequests = async () => {\n    try {\n      const response = await api.get('/api/audio-requests/my-orders');\n      \n      // Get viewed requests from localStorage\n      const storedViewedRequests = localStorage.getItem('viewedRequests');\n      const viewedRequests = storedViewedRequests ? new Set(JSON.parse(storedViewedRequests)) : new Set();\n      \n      // Count unread pending requests\n      const unreadCount = response.data.filter(\n        req => !viewedRequests.has(req._id) && req.status === 'pending'\n      ).length;\n      \n      setUnreadRequests(unreadCount);\n    } catch (err) {\n      console.error('Error fetching unread requests:', err);\n    }\n  };\n\n  const fetchUnreadMessages = async () => {\n    try {\n      const response = await api.get('/api/messages/unread');\n      setUnreadMessages(response.data.count);\n    } catch (err) {\n      console.error('Error fetching unread messages:', err);\n    }\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userId');\n    navigate('/login');\n  };\n\n  return (\n    <nav className=\"navbar\">\n      <div className=\"navbar-left\">\n        <Logo className=\"navbar-brand\" />\n      </div>\n      \n      {token && (\n        <div className=\"navbar-search\">\n          <SearchUsers />\n        </div>\n      )}\n      \n      <div className=\"navbar-links\">\n        {!token && (\n          <Link to=\"/login\">Login</Link>\n        )}\n        {token && (\n          <>\n            <Link to=\"/upload\">Send Audio</Link>\n            <Link to=\"/audio-history\">My Audio</Link>\n            <Link to=\"/inbox\" className=\"inbox-link\">\n              Messages\n              {unreadMessages > 0 && (\n                <Badge pill bg=\"danger\" className=\"unread-badge\">\n                  {unreadMessages}\n                </Badge>\n              )}\n            </Link>\n            <Link to=\"/requests\" className=\"requests-link\">\n              Requests\n              {unreadRequests > 0 && (\n                <Badge pill bg=\"danger\" className=\"unread-badge\">\n                  {unreadRequests}\n                </Badge>\n              )}\n            </Link>\n            <Link to=\"/profile\">My Profile</Link>\n            <button onClick={handleLogout} className=\"logout-button\">Logout</button>\n          </>\n        )}\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}