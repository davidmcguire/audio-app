{"ast":null,"code":"import React,{useState,useRef}from'react';import'./AudioRecorder.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AudioRecorder=_ref=>{let{onRecordingComplete}=_ref;const[isRecording,setIsRecording]=useState(false);const[recordingTime,setRecordingTime]=useState(0);const mediaRecorderRef=useRef(null);const audioChunksRef=useRef([]);const timerRef=useRef(null);const startRecording=async()=>{try{const stream=await navigator.mediaDevices.getUserMedia({audio:true});const mediaRecorder=new MediaRecorder(stream);mediaRecorderRef.current=mediaRecorder;audioChunksRef.current=[];mediaRecorder.ondataavailable=event=>{if(event.data.size>0){audioChunksRef.current.push(event.data);}};mediaRecorder.onstop=()=>{const audioBlob=new Blob(audioChunksRef.current,{type:'audio/wav'});onRecordingComplete(audioBlob);stream.getTracks().forEach(track=>track.stop());};mediaRecorder.start();setIsRecording(true);// Start timer\ntimerRef.current=setInterval(()=>{setRecordingTime(prev=>prev+1);},1000);}catch(error){console.error('Error accessing microphone:',error);alert('Error accessing microphone. Please ensure you have granted microphone permissions.');}};const stopRecording=()=>{if(mediaRecorderRef.current&&isRecording){mediaRecorderRef.current.stop();setIsRecording(false);clearInterval(timerRef.current);setRecordingTime(0);}};const formatTime=seconds=>{const minutes=Math.floor(seconds/60);const remainingSeconds=seconds%60;return`${minutes}:${remainingSeconds.toString().padStart(2,'0')}`;};return/*#__PURE__*/_jsxs(\"div\",{className:\"audio-recorder\",children:[/*#__PURE__*/_jsx(\"button\",{className:`record-button ${isRecording?'recording':''}`,onClick:isRecording?stopRecording:startRecording,children:isRecording?'Stop Recording':'Start Recording'}),isRecording&&/*#__PURE__*/_jsxs(\"div\",{className:\"recording-time\",children:[\"Recording: \",formatTime(recordingTime)]})]});};export default AudioRecorder;","map":{"version":3,"names":["React","useState","useRef","jsx","_jsx","jsxs","_jsxs","AudioRecorder","_ref","onRecordingComplete","isRecording","setIsRecording","recordingTime","setRecordingTime","mediaRecorderRef","audioChunksRef","timerRef","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","mediaRecorder","MediaRecorder","current","ondataavailable","event","data","size","push","onstop","audioBlob","Blob","type","getTracks","forEach","track","stop","start","setInterval","prev","error","console","alert","stopRecording","clearInterval","formatTime","seconds","minutes","Math","floor","remainingSeconds","toString","padStart","className","children","onClick"],"sources":["/Users/davidmcguire/Desktop/Master/Cursor/AudioZoom/client/src/components/AudioRecorder.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport './AudioRecorder.css';\n\nconst AudioRecorder = ({ onRecordingComplete }) => {\n  const [isRecording, setIsRecording] = useState(false);\n  const [recordingTime, setRecordingTime] = useState(0);\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const timerRef = useRef(null);\n\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      const mediaRecorder = new MediaRecorder(stream);\n      mediaRecorderRef.current = mediaRecorder;\n      audioChunksRef.current = [];\n\n      mediaRecorder.ondataavailable = (event) => {\n        if (event.data.size > 0) {\n          audioChunksRef.current.push(event.data);\n        }\n      };\n\n      mediaRecorder.onstop = () => {\n        const audioBlob = new Blob(audioChunksRef.current, { type: 'audio/wav' });\n        onRecordingComplete(audioBlob);\n        stream.getTracks().forEach(track => track.stop());\n      };\n\n      mediaRecorder.start();\n      setIsRecording(true);\n      \n      // Start timer\n      timerRef.current = setInterval(() => {\n        setRecordingTime(prev => prev + 1);\n      }, 1000);\n    } catch (error) {\n      console.error('Error accessing microphone:', error);\n      alert('Error accessing microphone. Please ensure you have granted microphone permissions.');\n    }\n  };\n\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n      clearInterval(timerRef.current);\n      setRecordingTime(0);\n    }\n  };\n\n  const formatTime = (seconds) => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n\n  return (\n    <div className=\"audio-recorder\">\n      <button \n        className={`record-button ${isRecording ? 'recording' : ''}`}\n        onClick={isRecording ? stopRecording : startRecording}\n      >\n        {isRecording ? 'Stop Recording' : 'Start Recording'}\n      </button>\n      {isRecording && (\n        <div className=\"recording-time\">\n          Recording: {formatTime(recordingTime)}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AudioRecorder; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}