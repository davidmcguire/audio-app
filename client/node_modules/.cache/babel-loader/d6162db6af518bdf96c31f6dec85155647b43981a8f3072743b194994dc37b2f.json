{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Button,Form,Alert,Card,Tabs,Tab}from'react-bootstrap';import api from'../utils/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PaymentSettings=_ref=>{var _user$paymentSettings,_user$paymentSettings2,_user$paymentSettings3,_user$paymentSettings4;let{user,onUpdate}=_ref;const[activeTab,setActiveTab]=useState('stripe');const[loading,setLoading]=useState(false);const[error,setError]=useState('');const[success,setSuccess]=useState('');const[paymentSettings,setPaymentSettings]=useState({acceptsPayments:(user===null||user===void 0?void 0:(_user$paymentSettings=user.paymentSettings)===null||_user$paymentSettings===void 0?void 0:_user$paymentSettings.acceptsPayments)||false,stripeAccountId:(user===null||user===void 0?void 0:(_user$paymentSettings2=user.paymentSettings)===null||_user$paymentSettings2===void 0?void 0:_user$paymentSettings2.stripeAccountId)||'',paypalEmail:(user===null||user===void 0?void 0:(_user$paymentSettings3=user.paymentSettings)===null||_user$paymentSettings3===void 0?void 0:_user$paymentSettings3.paypalEmail)||'',preferredCurrency:(user===null||user===void 0?void 0:(_user$paymentSettings4=user.paymentSettings)===null||_user$paymentSettings4===void 0?void 0:_user$paymentSettings4.preferredCurrency)||'USD'});const handleChange=e=>{const{name,value,type,checked}=e.target;setPaymentSettings({...paymentSettings,[name]:type==='checkbox'?checked:value});};const connectStripe=async()=>{try{setLoading(true);setError('');const response=await api.post('/api/payments/create-stripe-account-link',{},{withCredentials:true});const{url}=response.data;// Redirect to Stripe Connect onboarding\nwindow.location.href=url;}catch(err){setError('Failed to connect with Stripe. Please try again.');console.error('Stripe connect error:',err);}finally{setLoading(false);}};const savePaymentSettings=async()=>{try{setLoading(true);setError('');setSuccess('');const token=localStorage.getItem('token');await api.put('/api/users/payment-settings',paymentSettings,{headers:{Authorization:`Bearer ${token}`}});setSuccess('Payment settings saved successfully!');if(onUpdate)onUpdate({...user,paymentSettings});}catch(err){setError('Failed to save payment settings. Please try again.');console.error('Save payment settings error:',err);}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(Card,{className:\"mb-4\",children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsx(\"h5\",{children:\"Payment Settings\"})}),/*#__PURE__*/_jsxs(Card.Body,{children:[error&&/*#__PURE__*/_jsx(Alert,{variant:\"danger\",children:error}),success&&/*#__PURE__*/_jsx(Alert,{variant:\"success\",children:success}),/*#__PURE__*/_jsx(Form.Check,{type:\"switch\",id:\"accepts-payments\",label:\"Accept payments for requests\",name:\"acceptsPayments\",checked:paymentSettings.acceptsPayments,onChange:handleChange,className:\"mb-3\"}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Preferred Currency\"}),/*#__PURE__*/_jsxs(Form.Select,{name:\"preferredCurrency\",value:paymentSettings.preferredCurrency,onChange:handleChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"USD\",children:\"USD ($)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"EUR\",children:\"EUR (\\u20AC)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"GBP\",children:\"GBP (\\xA3)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"CAD\",children:\"CAD ($)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"AUD\",children:\"AUD ($)\"})]})]}),/*#__PURE__*/_jsxs(Tabs,{activeKey:activeTab,onSelect:k=>setActiveTab(k),className:\"mb-3\",children:[/*#__PURE__*/_jsxs(Tab,{eventKey:\"stripe\",title:\"Stripe\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Connect your Stripe account to receive payments directly to your bank account.\"}),paymentSettings.stripeAccountId?/*#__PURE__*/_jsxs(Alert,{variant:\"success\",children:[\"Your Stripe account is connected! ID: \",paymentSettings.stripeAccountId.substring(0,8),\"...\"]}):/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:connectStripe,disabled:loading,children:loading?'Connecting...':'Connect with Stripe'})]}),/*#__PURE__*/_jsxs(Tab,{eventKey:\"paypal\",title:\"PayPal\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Enter your PayPal email to receive payments to your PayPal account.\"}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"PayPal Email\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"email\",name:\"paypalEmail\",value:paymentSettings.paypalEmail,onChange:handleChange,placeholder:\"your-email@example.com\"})]})]})]}),/*#__PURE__*/_jsx(Button,{variant:\"success\",onClick:savePaymentSettings,disabled:loading,className:\"mt-3\",children:loading?'Saving...':'Save Payment Settings'})]})]});};export default PaymentSettings;","map":{"version":3,"names":["React","useState","useEffect","Button","Form","Alert","Card","Tabs","Tab","api","jsx","_jsx","jsxs","_jsxs","PaymentSettings","_ref","_user$paymentSettings","_user$paymentSettings2","_user$paymentSettings3","_user$paymentSettings4","user","onUpdate","activeTab","setActiveTab","loading","setLoading","error","setError","success","setSuccess","paymentSettings","setPaymentSettings","acceptsPayments","stripeAccountId","paypalEmail","preferredCurrency","handleChange","e","name","value","type","checked","target","connectStripe","response","post","withCredentials","url","data","window","location","href","err","console","savePaymentSettings","token","localStorage","getItem","put","headers","Authorization","className","children","Header","Body","variant","Check","id","label","onChange","Group","Label","Select","activeKey","onSelect","k","eventKey","title","substring","onClick","disabled","Control","placeholder"],"sources":["/Users/davidmcguire/Desktop/Master/Cursor/AudioZoom/client/src/components/PaymentSettings.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Form, Alert, Card, Tabs, Tab } from 'react-bootstrap';\nimport api from '../utils/api';\n\nconst PaymentSettings = ({ user, onUpdate }) => {\n  const [activeTab, setActiveTab] = useState('stripe');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [paymentSettings, setPaymentSettings] = useState({\n    acceptsPayments: user?.paymentSettings?.acceptsPayments || false,\n    stripeAccountId: user?.paymentSettings?.stripeAccountId || '',\n    paypalEmail: user?.paymentSettings?.paypalEmail || '',\n    preferredCurrency: user?.paymentSettings?.preferredCurrency || 'USD'\n  });\n\n  const handleChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    setPaymentSettings({\n      ...paymentSettings,\n      [name]: type === 'checkbox' ? checked : value\n    });\n  };\n\n  const connectStripe = async () => {\n    try {\n      setLoading(true);\n      setError('');\n      \n      const response = await api.post(\n        '/api/payments/create-stripe-account-link',\n        {},\n        { withCredentials: true }\n      );\n      \n      const { url } = response.data;\n      \n      // Redirect to Stripe Connect onboarding\n      window.location.href = url;\n    } catch (err) {\n      setError('Failed to connect with Stripe. Please try again.');\n      console.error('Stripe connect error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const savePaymentSettings = async () => {\n    try {\n      setLoading(true);\n      setError('');\n      setSuccess('');\n      \n      const token = localStorage.getItem('token');\n      await api.put(\n        '/api/users/payment-settings',\n        paymentSettings,\n        {\n          headers: { Authorization: `Bearer ${token}` }\n        }\n      );\n      \n      setSuccess('Payment settings saved successfully!');\n      if (onUpdate) onUpdate({ ...user, paymentSettings });\n    } catch (err) {\n      setError('Failed to save payment settings. Please try again.');\n      console.error('Save payment settings error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Card className=\"mb-4\">\n      <Card.Header>\n        <h5>Payment Settings</h5>\n      </Card.Header>\n      <Card.Body>\n        {error && <Alert variant=\"danger\">{error}</Alert>}\n        {success && <Alert variant=\"success\">{success}</Alert>}\n        \n        <Form.Check\n          type=\"switch\"\n          id=\"accepts-payments\"\n          label=\"Accept payments for requests\"\n          name=\"acceptsPayments\"\n          checked={paymentSettings.acceptsPayments}\n          onChange={handleChange}\n          className=\"mb-3\"\n        />\n        \n        <Form.Group className=\"mb-3\">\n          <Form.Label>Preferred Currency</Form.Label>\n          <Form.Select\n            name=\"preferredCurrency\"\n            value={paymentSettings.preferredCurrency}\n            onChange={handleChange}\n          >\n            <option value=\"USD\">USD ($)</option>\n            <option value=\"EUR\">EUR (€)</option>\n            <option value=\"GBP\">GBP (£)</option>\n            <option value=\"CAD\">CAD ($)</option>\n            <option value=\"AUD\">AUD ($)</option>\n          </Form.Select>\n        </Form.Group>\n        \n        <Tabs\n          activeKey={activeTab}\n          onSelect={(k) => setActiveTab(k)}\n          className=\"mb-3\"\n        >\n          <Tab eventKey=\"stripe\" title=\"Stripe\">\n            <p>Connect your Stripe account to receive payments directly to your bank account.</p>\n            {paymentSettings.stripeAccountId ? (\n              <Alert variant=\"success\">\n                Your Stripe account is connected! ID: {paymentSettings.stripeAccountId.substring(0, 8)}...\n              </Alert>\n            ) : (\n              <Button \n                variant=\"primary\" \n                onClick={connectStripe}\n                disabled={loading}\n              >\n                {loading ? 'Connecting...' : 'Connect with Stripe'}\n              </Button>\n            )}\n          </Tab>\n          \n          <Tab eventKey=\"paypal\" title=\"PayPal\">\n            <p>Enter your PayPal email to receive payments to your PayPal account.</p>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>PayPal Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                name=\"paypalEmail\"\n                value={paymentSettings.paypalEmail}\n                onChange={handleChange}\n                placeholder=\"your-email@example.com\"\n              />\n            </Form.Group>\n          </Tab>\n        </Tabs>\n        \n        <Button \n          variant=\"success\" \n          onClick={savePaymentSettings}\n          disabled={loading}\n          className=\"mt-3\"\n        >\n          {loading ? 'Saving...' : 'Save Payment Settings'}\n        </Button>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default PaymentSettings; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,MAAM,CAAEC,IAAI,CAAEC,KAAK,CAAEC,IAAI,CAAEC,IAAI,CAAEC,GAAG,KAAQ,iBAAiB,CACtE,MAAO,CAAAC,GAAG,KAAM,cAAc,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/B,KAAM,CAAAC,eAAe,CAAGC,IAAA,EAAwB,KAAAC,qBAAA,CAAAC,sBAAA,CAAAC,sBAAA,CAAAC,sBAAA,IAAvB,CAAEC,IAAI,CAAEC,QAAS,CAAC,CAAAN,IAAA,CACzC,KAAM,CAACO,SAAS,CAAEC,YAAY,CAAC,CAAGtB,QAAQ,CAAC,QAAQ,CAAC,CACpD,KAAM,CAACuB,OAAO,CAAEC,UAAU,CAAC,CAAGxB,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACyB,KAAK,CAAEC,QAAQ,CAAC,CAAG1B,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAAC2B,OAAO,CAAEC,UAAU,CAAC,CAAG5B,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAAC6B,eAAe,CAAEC,kBAAkB,CAAC,CAAG9B,QAAQ,CAAC,CACrD+B,eAAe,CAAE,CAAAZ,IAAI,SAAJA,IAAI,kBAAAJ,qBAAA,CAAJI,IAAI,CAAEU,eAAe,UAAAd,qBAAA,iBAArBA,qBAAA,CAAuBgB,eAAe,GAAI,KAAK,CAChEC,eAAe,CAAE,CAAAb,IAAI,SAAJA,IAAI,kBAAAH,sBAAA,CAAJG,IAAI,CAAEU,eAAe,UAAAb,sBAAA,iBAArBA,sBAAA,CAAuBgB,eAAe,GAAI,EAAE,CAC7DC,WAAW,CAAE,CAAAd,IAAI,SAAJA,IAAI,kBAAAF,sBAAA,CAAJE,IAAI,CAAEU,eAAe,UAAAZ,sBAAA,iBAArBA,sBAAA,CAAuBgB,WAAW,GAAI,EAAE,CACrDC,iBAAiB,CAAE,CAAAf,IAAI,SAAJA,IAAI,kBAAAD,sBAAA,CAAJC,IAAI,CAAEU,eAAe,UAAAX,sBAAA,iBAArBA,sBAAA,CAAuBgB,iBAAiB,GAAI,KACjE,CAAC,CAAC,CAEF,KAAM,CAAAC,YAAY,CAAIC,CAAC,EAAK,CAC1B,KAAM,CAAEC,IAAI,CAAEC,KAAK,CAAEC,IAAI,CAAEC,OAAQ,CAAC,CAAGJ,CAAC,CAACK,MAAM,CAC/CX,kBAAkB,CAAC,CACjB,GAAGD,eAAe,CAClB,CAACQ,IAAI,EAAGE,IAAI,GAAK,UAAU,CAAGC,OAAO,CAAGF,KAC1C,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAI,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,CACFlB,UAAU,CAAC,IAAI,CAAC,CAChBE,QAAQ,CAAC,EAAE,CAAC,CAEZ,KAAM,CAAAiB,QAAQ,CAAG,KAAM,CAAAnC,GAAG,CAACoC,IAAI,CAC7B,0CAA0C,CAC1C,CAAC,CAAC,CACF,CAAEC,eAAe,CAAE,IAAK,CAC1B,CAAC,CAED,KAAM,CAAEC,GAAI,CAAC,CAAGH,QAAQ,CAACI,IAAI,CAE7B;AACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAGJ,GAAG,CAC5B,CAAE,MAAOK,GAAG,CAAE,CACZzB,QAAQ,CAAC,kDAAkD,CAAC,CAC5D0B,OAAO,CAAC3B,KAAK,CAAC,uBAAuB,CAAE0B,GAAG,CAAC,CAC7C,CAAC,OAAS,CACR3B,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,KAAM,CAAA6B,mBAAmB,CAAG,KAAAA,CAAA,GAAY,CACtC,GAAI,CACF7B,UAAU,CAAC,IAAI,CAAC,CAChBE,QAAQ,CAAC,EAAE,CAAC,CACZE,UAAU,CAAC,EAAE,CAAC,CAEd,KAAM,CAAA0B,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,KAAM,CAAAhD,GAAG,CAACiD,GAAG,CACX,6BAA6B,CAC7B5B,eAAe,CACf,CACE6B,OAAO,CAAE,CAAEC,aAAa,CAAE,UAAUL,KAAK,EAAG,CAC9C,CACF,CAAC,CAED1B,UAAU,CAAC,sCAAsC,CAAC,CAClD,GAAIR,QAAQ,CAAEA,QAAQ,CAAC,CAAE,GAAGD,IAAI,CAAEU,eAAgB,CAAC,CAAC,CACtD,CAAE,MAAOsB,GAAG,CAAE,CACZzB,QAAQ,CAAC,oDAAoD,CAAC,CAC9D0B,OAAO,CAAC3B,KAAK,CAAC,8BAA8B,CAAE0B,GAAG,CAAC,CACpD,CAAC,OAAS,CACR3B,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,mBACEZ,KAAA,CAACP,IAAI,EAACuD,SAAS,CAAC,MAAM,CAAAC,QAAA,eACpBnD,IAAA,CAACL,IAAI,CAACyD,MAAM,EAAAD,QAAA,cACVnD,IAAA,OAAAmD,QAAA,CAAI,kBAAgB,CAAI,CAAC,CACd,CAAC,cACdjD,KAAA,CAACP,IAAI,CAAC0D,IAAI,EAAAF,QAAA,EACPpC,KAAK,eAAIf,IAAA,CAACN,KAAK,EAAC4D,OAAO,CAAC,QAAQ,CAAAH,QAAA,CAAEpC,KAAK,CAAQ,CAAC,CAChDE,OAAO,eAAIjB,IAAA,CAACN,KAAK,EAAC4D,OAAO,CAAC,SAAS,CAAAH,QAAA,CAAElC,OAAO,CAAQ,CAAC,cAEtDjB,IAAA,CAACP,IAAI,CAAC8D,KAAK,EACT1B,IAAI,CAAC,QAAQ,CACb2B,EAAE,CAAC,kBAAkB,CACrBC,KAAK,CAAC,8BAA8B,CACpC9B,IAAI,CAAC,iBAAiB,CACtBG,OAAO,CAAEX,eAAe,CAACE,eAAgB,CACzCqC,QAAQ,CAAEjC,YAAa,CACvByB,SAAS,CAAC,MAAM,CACjB,CAAC,cAEFhD,KAAA,CAACT,IAAI,CAACkE,KAAK,EAACT,SAAS,CAAC,MAAM,CAAAC,QAAA,eAC1BnD,IAAA,CAACP,IAAI,CAACmE,KAAK,EAAAT,QAAA,CAAC,oBAAkB,CAAY,CAAC,cAC3CjD,KAAA,CAACT,IAAI,CAACoE,MAAM,EACVlC,IAAI,CAAC,mBAAmB,CACxBC,KAAK,CAAET,eAAe,CAACK,iBAAkB,CACzCkC,QAAQ,CAAEjC,YAAa,CAAA0B,QAAA,eAEvBnD,IAAA,WAAQ4B,KAAK,CAAC,KAAK,CAAAuB,QAAA,CAAC,SAAO,CAAQ,CAAC,cACpCnD,IAAA,WAAQ4B,KAAK,CAAC,KAAK,CAAAuB,QAAA,CAAC,cAAO,CAAQ,CAAC,cACpCnD,IAAA,WAAQ4B,KAAK,CAAC,KAAK,CAAAuB,QAAA,CAAC,YAAO,CAAQ,CAAC,cACpCnD,IAAA,WAAQ4B,KAAK,CAAC,KAAK,CAAAuB,QAAA,CAAC,SAAO,CAAQ,CAAC,cACpCnD,IAAA,WAAQ4B,KAAK,CAAC,KAAK,CAAAuB,QAAA,CAAC,SAAO,CAAQ,CAAC,EACzB,CAAC,EACJ,CAAC,cAEbjD,KAAA,CAACN,IAAI,EACHkE,SAAS,CAAEnD,SAAU,CACrBoD,QAAQ,CAAGC,CAAC,EAAKpD,YAAY,CAACoD,CAAC,CAAE,CACjCd,SAAS,CAAC,MAAM,CAAAC,QAAA,eAEhBjD,KAAA,CAACL,GAAG,EAACoE,QAAQ,CAAC,QAAQ,CAACC,KAAK,CAAC,QAAQ,CAAAf,QAAA,eACnCnD,IAAA,MAAAmD,QAAA,CAAG,gFAA8E,CAAG,CAAC,CACpFhC,eAAe,CAACG,eAAe,cAC9BpB,KAAA,CAACR,KAAK,EAAC4D,OAAO,CAAC,SAAS,CAAAH,QAAA,EAAC,wCACe,CAAChC,eAAe,CAACG,eAAe,CAAC6C,SAAS,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,KACzF,EAAO,CAAC,cAERnE,IAAA,CAACR,MAAM,EACL8D,OAAO,CAAC,SAAS,CACjBc,OAAO,CAAEpC,aAAc,CACvBqC,QAAQ,CAAExD,OAAQ,CAAAsC,QAAA,CAEjBtC,OAAO,CAAG,eAAe,CAAG,qBAAqB,CAC5C,CACT,EACE,CAAC,cAENX,KAAA,CAACL,GAAG,EAACoE,QAAQ,CAAC,QAAQ,CAACC,KAAK,CAAC,QAAQ,CAAAf,QAAA,eACnCnD,IAAA,MAAAmD,QAAA,CAAG,qEAAmE,CAAG,CAAC,cAC1EjD,KAAA,CAACT,IAAI,CAACkE,KAAK,EAACT,SAAS,CAAC,MAAM,CAAAC,QAAA,eAC1BnD,IAAA,CAACP,IAAI,CAACmE,KAAK,EAAAT,QAAA,CAAC,cAAY,CAAY,CAAC,cACrCnD,IAAA,CAACP,IAAI,CAAC6E,OAAO,EACXzC,IAAI,CAAC,OAAO,CACZF,IAAI,CAAC,aAAa,CAClBC,KAAK,CAAET,eAAe,CAACI,WAAY,CACnCmC,QAAQ,CAAEjC,YAAa,CACvB8C,WAAW,CAAC,wBAAwB,CACrC,CAAC,EACQ,CAAC,EACV,CAAC,EACF,CAAC,cAEPvE,IAAA,CAACR,MAAM,EACL8D,OAAO,CAAC,SAAS,CACjBc,OAAO,CAAEzB,mBAAoB,CAC7B0B,QAAQ,CAAExD,OAAQ,CAClBqC,SAAS,CAAC,MAAM,CAAAC,QAAA,CAEftC,OAAO,CAAG,WAAW,CAAG,uBAAuB,CAC1C,CAAC,EACA,CAAC,EACR,CAAC,CAEX,CAAC,CAED,cAAe,CAAAV,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}