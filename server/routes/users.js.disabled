const express = require('express');
const router = express.Router();
const User = require('../models/User');
const auth = require('../middleware/auth');
const Recording = require('../models/Recording');
const multer = require('multer');
const path = require('path');
const fs = require('fs');
const mongoose = require('mongoose');

// Configure multer for profile picture uploads
const storage = multer.diskStorage({
  destination: function (req, file, cb) {
    const dir = 'uploads/profile';
    if (!fs.existsSync(dir)) {
      fs.mkdirSync(dir, { recursive: true });
    }
    cb(null, dir);
  },
  filename: function (req, file, cb) {
    cb(null, Date.now() + '-' + file.originalname);
  }
});

const upload = multer({ 
  storage: storage,
  limits: {
    fileSize: 5 * 1024 * 1024 // 5MB limit
  },
  fileFilter: (req, file, cb) => {
    if (file.mimetype.startsWith('image/')) {
      cb(null, true);
    } else {
      cb(new Error('Not an image! Please upload an image file.'), false);
    }
  }
});

// Test route
router.get('/test', function(req, res) {
  res.json({ message: 'Users API working' });
});

// Get featured users
router.get('/featured', auth, function(req, res) {
  try {
    // Simple response for now
    res.json([]);
  } catch (err) {
    console.error('Error fetching featured users:', err);
    res.status(500).json({ message: 'Error fetching featured users' });
  }
});

// Get user profile
router.get('/profile', auth, function(req, res) {
  try {
    res.json({
      id: "placeholder",
      name: "User",
      email: "email@example.com"
    });
  } catch (err) {
    console.error('Error fetching user profile:', err);
    res.status(500).json({ message: 'Error fetching user profile' });
  }
});

// Get user by ID
router.get('/:userId', auth, function(req, res) {
  try {
    res.json({
      id: req.params.userId,
      name: "User",
      email: "email@example.com"
    });
  } catch (err) {
    console.error('Error fetching user profile:', err);
    res.status(500).json({ message: 'Error fetching user profile' });
  }
});

module.exports = router; 